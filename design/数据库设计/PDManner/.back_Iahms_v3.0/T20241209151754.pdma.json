{"name":"Iahms_v3.0","describe":"整合了大部分数据库前缀名","avatar":"","version":"4.9.4","createdTime":"2024-11-20 17:58:14","updatedTime":"2024-12-9 15:17:54","dbConns":[],"profile":{"default":{"db":"29D1CE08-4C35-4D2D-AAA9-23D93305B52E","dbConn":"121450D0-5FCB-41C6-9A56-0FBA123DEA30","entityInitFields":[{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"NULL","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"44994539-3634-4AB9-A373-142C18C3B8C4"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"ADB3AD14-6603-43E2-8261-114E32442B5B","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"92BF430E-01FA-4AEF-944F-25A142632654","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"C8BE2C7A-8251-4ADD-BB4F-411C5754DA62","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"4E471FD6-3E73-4A90-B660-51598A482409","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"0DC24AA9-4CD0-45D8-95CF-FA546BE343AB","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"09F64AC4-4DEE-428F-AF64-4C103884E1AC","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"entityInitProperties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""}},"javaHome":"","sql":{"delimiter":""},"dataTypeSupports":[{"defKey":"MYSQL","id":"29D1CE08-4C35-4D2D-AAA9-23D93305B52E"},{"defKey":"ORACLE","id":"A4E23CB7-BB01-4BD1-9F71-F73F3E15A542"},{"defKey":"SQLServer","id":"BFC87171-C74F-494A-B7C2-76B9C55FACC9"},{"defKey":"PostgreSQL","id":"DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022"},{"defKey":"DB2","id":"89504F5D-94BF-4C9E-8B2E-44F37305FED5"},{"defKey":"DM","id":"0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307"},{"defKey":"GaussDB","id":"592C7013-143D-4E7B-AF64-0D7BF1E28230"},{"defKey":"Kingbase","id":"77BD85E5-9D0D-4096-8427-CBA306FC9C6A"},{"defKey":"GBase","id":"56F4B55B-F0B8-4049-9E6B-50B95C1D793A"},{"defKey":"MaxCompute","id":"11D1FB71-A587-4217-89BA-611B8A1F83E0"},{"defKey":"SQLite","id":"B363BE0B-F852-49B8-9B2E-F6D2174DEAC1"},{"defKey":"Hive","id":"81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2"},{"defKey":"JAVA","id":"797A1496-D649-4261-89B4-544132EC3F36"},{"defKey":"JavaMybatis","id":"895CFD1D-4273-4D32-A2C4-CAC70200AB5B"},{"defKey":"JavaMybatisPlus","id":"A2EE7B4A-CE62-4290-B00C-B26C1BF18073"},{"defKey":"C#","id":"F3AC2415-E86B-40C6-9FEB-F4B7937D2C30"},{"defKey":"Golang","id":"B91D99E0-9B7C-416C-8737-B760957DAF09"},{"defKey":"Rust","id":"BDF457FD-9F98-4AC3-A705-7587B00A3BAB"},{"defKey":"Doris","id":"483F9346-C99E-4014-A1D2-A554606BD8A3"},{"defKey":"HighGo","id":"ABF5836C-0B7C-4007-A41C-F869325E5842"}],"codeTemplates":[{"type":"appCode","applyFor":"797A1496-D649-4261-89B4-544132EC3F36"," JpaBean":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport javax.persistence.*;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@Table(name=\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    {{? field.primaryKey }}\n    @Id\n    @GeneratedValue\n    {{?}}\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"},{"type":"appCode","applyFor":"F3AC2415-E86B-40C6-9FEB-F4B7937D2C30","Default":"using System;\nusing System.Collections.Generic;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n}}\n/*\n * @author : http://www.chiner.com.cn\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace PDManer.Application\n{\n    public partial class {{=it.func.camel(it.entity.defKey,true) }}\n    {\n    \n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}} { get; set; }\n        $blankline\n        {{~}}\n        \n    }\n}","SqlSugar":"using System;\nusing System.Collections.Generic;\nusing SqlSugar;\n\n$blankline\n{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    var sqlSugartable='[SugarTable(\"{{=it.entity.defKey}}\", TableDescription = \"{{=it.func.join(it.entity.defName,it.entity.comment,';')}}\")]';\n}}\n/*\n * @author : xkdong@163.com\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n * @desc : {{=it.func.join(it.entity.defName,it.entity.comment,'-')}}\n */\nnamespace Model.DBModel\n{\n    /// <summary>\n    /// {{=it.func.join(it.entity.defName,it.entity.comment,';')}}\n    /// </summary>\n    {{=sqlSugartable}}\n    public class {{=it.entity.defKey}}\n    {\n        {{~it.entity.fields:field:index}}\n        /// <summary>\n        /// {{=it.func.join(field.defName,field.comment,';')}}\n        /// </summary>\n        {{? field.primaryKey }}\n        [SugarColumn(IsIdentity = true, IsPrimaryKey = true)]\n        {{?}}\n        public {{=field.type}} {{=it.func.camel(field.defKey,true)}}{ get; set; }\n        $blankline\n        {{~}}\n    }\n}"},{"applyFor":"895CFD1D-4273-4D32-A2C4-CAC70200AB5B","type":"appCode","Controller":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<Page<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        return ResponseEntity.ok({{=serviceVarName}}.paginQuery({{=beanVarName}}, pageRequest));\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}","Service":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}","ServiceImpl":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.queryById({{=pkVarName}});\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        long total = {{=mapperName}}.count({{=beanVarName}});\n        return new PageImpl<>({{=mapperName}}.queryAllByLimit({{=beanVarName}}, pageRequest), pageRequest, total);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.update({{=beanVarName}});\n        return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}","Mapper":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\nimport java.util.List;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.data.domain.Pageable;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper{\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    \n    /** \n     * 分页查询指定行数据\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @param pageable 分页对象\n     * @return 对象列表\n     */\n    List<{{=beanClass}}> queryAllByLimit({{=beanClass}} {{=beanVarName}}, @Param(\"pageable\") Pageable pageable);\n\n    /** \n     * 统计总行数\n     *\n     * @param {{=beanVarName}} 查询条件\n     * @return 总行数\n     */\n    long count({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int insert({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 批量新增数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 批量新增或按主键更新数据\n     *\n     * @param entities List<{{=beanClass}}> 实例对象列表\n     * @return 影响行数\n     */\n    int insertOrUpdateBatch(@Param(\"entities\") List<{{=beanClass}}> entities);\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 影响行数\n     */\n    int update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 影响行数\n     */\n    int deleteById({{=pkDataType}} {{=pkVarName}});\n}","Mapper.xml":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n    <resultMap type=\"{{=pkgName}}.entity.{{=beanClass}}\" id=\"{{=beanClass}}Map\">\n    {{~it.entity.fields:field:index}}\n        <result property=\"{{=it.func.camel(field.defKey,false)}}\" column=\"{{=field.defKey}}\" jdbcType=\"{{=field.type}}\"/>\n    {{~}}\n    </resultMap>\n    $blankline\n    <!-- 通过ID查询单条数据 -->\n    <select id=\"queryById\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </select>\n    $blankline\n    <!--分页查询指定行数据-->\n    <select id=\"queryAllByLimit\" resultMap=\"{{=beanClass}}Map\">\n        select\n            {{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}}\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n        limit #{pageable.offset}, #{pageable.pageSize}\n    </select>\n    $blankline\n    <!--统计总行数-->\n    <select id=\"count\" resultType=\"java.lang.Long\">\n        select count(1)\n        from {{=it.entity.defKey}}\n        <where>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                and {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}}\n            </if>\n        {{~}}\n        </where>\n    </select>\n    $blankline\n    <!--新增数据-->\n    <insert id=\"insert\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values ({{=it.entity.fields.map(function(e,i){return '#{'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n    </insert>\n    $blankline\n    <!-- 批量新增数据 -->\n    <insert id=\"insertBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n    </insert>\n    $blankline\n    <!-- 批量新增或按主键更新数据 -->\n    <insert id=\"insertOrUpdateBatch\" keyProperty=\"{{=pkField}}\" useGeneratedKeys=\"true\">\n        insert into {{=it.entity.defKey}}({{=it.entity.fields.map(function(e,i){return e.defKey}).join(',')}})\n        values\n        <foreach collection=\"entities\" item=\"entity\" separator=\",\">\n            ({{=it.entity.fields.map(function(e,i){return '#{entity.'+it.func.camel(e.defKey,false)+'}'}).join(',')}})\n        </foreach>\n        on duplicate key update\n        {{=it.entity.fields.map(function(e,i){return e.defKey + '=values('+e.defKey+')'}).join(',\\n\\t\\t')}}\n    </insert>\n    $blankline\n    <!-- 更新数据 -->\n    <update id=\"update\">\n        update {{=it.entity.defKey}}\n        <set>\n        {{~it.entity.fields:field:index}}\n            <if test=\"{{=it.func.camel(field.defKey,false)}} != null and {{=it.func.camel(field.defKey,false)}} != ''\">\n                {{=field.defKey}} = #{{{=it.func.camel(field.defKey,false)}}},\n            </if>\n        {{~}}\n        </set>\n        where {{=pkField}} = #{{{=pkVarName}}}\n    </update>\n    $blankline\n    <!--通过主键删除-->\n    <delete id=\"deleteById\">\n        delete from {{=it.entity.defKey}} where {{=pkField}} = #{{{=pkVarName}}}\n    </delete>\n</mapper>\n\n","Entity":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"},{"applyFor":"A2EE7B4A-CE62-4290-B00C-B26C1BF18073","type":"appCode","Controller":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.controller;\n$blankline\nimport java.util.List;\nimport io.swagger.annotations.Api;\nimport io.swagger.annotations.ApiOperation;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.PageImpl;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.service.{{=serviceClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表控制层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Api(tags = \"{{=it.entity.defName}}对象功能接口\")\n@RestController\n@RequestMapping(\"/{{=it.func.camel(it.entity.defKey,false)}}\")\npublic class {{=beanClass}}Controller{\n    @Autowired\n    private {{=serviceClass}} {{=serviceVarName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    @ApiOperation(\"通过ID查询单条数据\")\n    @GetMapping(\"{{{=it.func.camel(pkVarName,false)}}}\")\n    public ResponseEntity<{{=beanClass}}> queryById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.queryById({{=pkVarName}}));\n    }\n    $blankline\n    /** \n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param pageRequest 分页对象\n     * @return 查询结果\n     */\n    @ApiOperation(\"分页查询\")\n    @GetMapping\n    public ResponseEntity<PageImpl<{{=beanClass}}>> paginQuery({{=beanClass}} {{=beanVarName}}, PageRequest pageRequest){\n        //1.分页参数\n        long current = pageRequest.getPageNumber();\n        long size = pageRequest.getPageSize();\n\n        //2.分页查询\n        /*把Mybatis的分页对象做封装转换，MP的分页对象上有一些SQL敏感信息，还是通过spring的分页模型来封装数据吧*/\n        com.baomidou.mybatisplus.extension.plugins.pagination.Page<{{=beanClass}}> pageResult = {{=serviceVarName}}.paginQuery({{=beanVarName}}, current,size);\n\n        //3. 分页结果组装\n        List<{{=beanClass}}> dataList = pageResult.getRecords();\n        long total = pageResult.getTotal();\n        PageImpl<{{=beanClass}}> retPage = new PageImpl<{{=beanClass}}>(dataList,pageRequest,total);\n        return ResponseEntity.ok(retPage);\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"新增数据\")\n    @PostMapping\n    public ResponseEntity<{{=beanClass}}> add({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.insert({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    @ApiOperation(\"更新数据\")\n    @PutMapping\n    public ResponseEntity<{{=beanClass}}> edit({{=beanClass}} {{=beanVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.update({{=beanVarName}}));\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    @ApiOperation(\"通过主键删除数据\")\n    @DeleteMapping\n    public ResponseEntity<Boolean> deleteById({{=pkDataType}} {{=pkVarName}}){\n        return ResponseEntity.ok({{=serviceVarName}}.deleteById({{=pkVarName}}));\n    }\n}","Service":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.service;\n$blankline\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务接口\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\npublic interface {{=serviceClass}}{\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}});\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size);\n\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} insert({{=beanClass}} {{=beanVarName}});\n\n    \n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    {{=beanClass}} update({{=beanClass}} {{=beanVarName}});\n\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    boolean deleteById({{=pkDataType}} {{=pkVarName}});\n}","ServiceImpl":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkVarNameU = \"UndefinedId\";\n    var pkFieldKey = \"UNDEFINED\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkFieldKey = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkVarNameU = it.func.camel(field.defKey,true);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    var mapperName = beanVarName+'Mapper';\n    \n}}package {{=pkgName}}.service.impl;\n$blankline\nimport cn.hutool.core.util.StrUtil;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.conditions.update.LambdaUpdateChainWrapper;\n\nimport {{=pkgName}}.entity.{{=beanClass}};\nimport {{=pkgName}}.mapper.{{=beanClass}}Mapper;\nimport {{=pkgName}}.service.{{=serviceClass}};\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表服务实现类\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Service\npublic class {{=serviceClass}}Impl implements {{=serviceClass}}{\n    @Autowired\n    private {{=beanClass}}Mapper {{=mapperName}};\n    $blankline\n    /** \n     * 通过ID查询单条数据 \n     *\n     * @param {{=pkVarName}} 主键\n     * @return 实例对象\n     */\n    public {{=beanClass}} queryById({{=pkDataType}} {{=pkVarName}}){\n        return {{=mapperName}}.selectById({{=pkVarName}});\n    }\n    $blankline\n    /**\n     * 分页查询\n     *\n     * @param {{=beanVarName}} 筛选条件\n     * @param current 当前页码\n     * @param size  每页大小\n     * @return\n     */\n    public Page<{{=beanClass}}> paginQuery({{=beanClass}} {{=beanVarName}}, long current, long size){\n        //1. 构建动态查询条件\n        LambdaQueryWrapper<{{=beanClass}}> queryWrapper = new LambdaQueryWrapper<>();\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            queryWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n\n        //2. 执行分页查询\n        Page<{{=beanClass}}> pagin = new Page<>(current , size , true);\n        IPage<{{=beanClass}}> selectResult = {{=mapperName}}.selectByPage(pagin , queryWrapper);\n        pagin.setPages(selectResult.getPages());\n        pagin.setTotal(selectResult.getTotal());\n        pagin.setRecords(selectResult.getRecords());\n\n        //3. 返回结果\n        return pagin;\n    }\n    $blankline\n    /** \n     * 新增数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} insert({{=beanClass}} {{=beanVarName}}){\n        {{=mapperName}}.insert({{=beanVarName}});\n        return {{=beanVarName}};\n    }\n    $blankline\n    /** \n     * 更新数据\n     *\n     * @param {{=beanVarName}} 实例对象\n     * @return 实例对象\n     */\n    public {{=beanClass}} update({{=beanClass}} {{=beanVarName}}){\n        //1. 根据条件动态更新\n        LambdaUpdateChainWrapper<{{=beanClass}}> chainWrapper = new LambdaUpdateChainWrapper<{{=beanClass}}>({{=mapperName}});\n        {{~it.entity.fields.filter(function(e){return e[\"type\"]===\"String\"&&e.defKey !== pkFieldKey}):field:index}}\n        if(StrUtil.isNotBlank({{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}())){\n            chainWrapper.eq({{=beanClass}}::get{{=it.func.camel(field.defKey,true)}}, {{=beanVarName}}.get{{=it.func.camel(field.defKey,true)}}());\n        }\n        {{~}}\n        //2. 设置主键，并更新\n        chainWrapper.set({{=beanClass}}::get{{=pkVarNameU}}, {{=beanVarName}}.get{{=pkVarNameU}}());\n        boolean ret = chainWrapper.update();\n        //3. 更新成功了，查询最最对象返回\n        if(ret){\n            return queryById({{=beanVarName}}.get{{=pkVarNameU}}());\n        }else{\n            return {{=beanVarName}};\n        }\n    }\n    $blankline\n    /** \n     * 通过主键删除数据\n     *\n     * @param {{=pkVarName}} 主键\n     * @return 是否成功\n     */\n    public boolean deleteById({{=pkDataType}} {{=pkVarName}}){\n        int total = {{=mapperName}}.deleteById({{=pkVarName}});\n        return total > 0;\n    }\n}","Mapper":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.mapper;\n$blankline\n\nimport com.baomidou.mybatisplus.core.conditions.Wrapper;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.Constants;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Param;\nimport {{=pkgName}}.entity.{{=beanClass}};\n$blankline\n\n /**\n * {{=it.entity.defName}};({{=it.entity.defKey}})表数据库访问层\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@Mapper\npublic interface {{=beanClass}}Mapper  extends BaseMapper<{{=beanClass}}>{\n    /** \n     * 分页查询指定行数据\n     *\n     * @param page 分页参数\n     * @param wrapper 动态查询条件\n     * @return 分页对象列表\n     */\n    IPage<{{=beanClass}}> selectByPage(IPage<{{=beanClass}}> page , @Param(Constants.WRAPPER) Wrapper<{{=beanClass}}> wrapper);\n}","Mapper.xml":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    var pkField = \"UNDEFINED_ID\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkField = field.defKey;\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n$blankline\n\n<mapper namespace=\"{{=pkgName}}.mapper.{{=beanClass}}Mapper\">\n     <select id=\"selectByPage\" resultType=\"{{=pkgName}}.entity.{{=beanClass}}\">\n        select * from user ${ew.customSqlSegment}\n    </select>\n</mapper>\n\n","Entity":"{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    var serviceClass = beanClass+'Service';\n    var serviceVarName= beanVarName+'Service';\n    \n}}package {{=pkgName}}.entity;\n$blankline\nimport io.swagger.annotations.ApiModel;\nimport io.swagger.annotations.ApiModelProperty;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport java.io.Serializable;\nimport java.util.Date;\n$blankline\n\n /**\n * {{=it.entity.defName}};{{=it.entity.comment}}\n * @author : http://www.chiner.pro\n * @date : {{=fullYear}}-{{=month}}-{{=days}}\n */\n@ApiModel(value = \"{{=it.entity.defName}}\",description = \"{{=it.entity.comment}}\")\n@TableName(\"{{=it.entity.defKey}}\")\npublic class {{=beanClass}} implements Serializable,Cloneable{\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    @ApiModelProperty(name = \"{{=field.defName}}\",notes = \"{{=field.comment}}\")\n    {{? field.primaryKey }}\n    @TableId\n    {{?}}\n    private {{=field.type}} {{=it.func.camel(field.defKey,false)}} ;\n{{~}}\n$blankline\n\n{{~it.entity.fields:field:index}}\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public {{=field.type}} get{{=it.func.camel(field.defKey,true)}}(){\n        return this.{{=it.func.camel(field.defKey,false)}};\n    }\n    /** {{=it.func.join(field.defName,field.comment,';')}} */\n    public void set{{=it.func.camel(field.defKey,true)}}({{=field.type}} {{= it.func.camel(field.defKey,false) }}){\n        this.{{=it.func.camel(field.defKey,false)}}={{=it.func.camel(field.defKey,false)}};\n    }\n{{~}}\n}"},{"applyFor":"29D1CE08-4C35-4D2D-AAA9-23D93305B52E","type":"dbDDL","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    `{{=field.defKey}}` {{?field.autoIncrement}}{{=field.type}} AUTO_INCREMENT{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{?}}{{= field.extProps&&field.extProps.on_update ? it.func.join('ON UPDATE',field.extProps.on_update,' ') : ''}} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT = '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","deleteTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","deleteIndex":"{{~ it.entity.indexes:index}}\nDROP INDEX IF EXISTS {{=index.defKey}} ;\n{{~}}","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN `'+field.defKey+'` '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT ' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN `'+after.defKey+'`');\n            }else{\n                changeDDL += (' CHANGE COLUMN `'+before.defKey+'` `'+after.defKey+'`');\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            if(defaultValue != 'NULL'){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n\n            let comment = after.defName;\n            if(after.comment){\n                comment = comment + ';' + (after.comment||'');\n            }\n            if(comment){\n                changeDDL += (' COMMENT \\''+comment+'\\';');\n            }\n            \n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"applyFor":"A4E23CB7-BB01-4BD1-9F71-F73F3E15A542","type":"dbDDL","createTable":"CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{?field.autoIncrement}}NUMBER(11) generated by default as IDENTITY, {{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}{{?}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","deleteTable":"DROP TABLE {{=it.entity.defKey}};","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","deleteIndex":"{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"applyFor":"BFC87171-C74F-494A-B7C2-76B9C55FACC9","type":"dbDDL","createTable":"IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];\n\nCREATE TABLE [dbo].[{{=it.entity.defKey}}](\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{?field.autoIncrement}}INT IDENTITY(1,1) {{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}{{?}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}EXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, null, null;{{?}}\n{{~it.entity.fields:field:index}}\nEXEC sp_addextendedproperty 'MS_Description', '{{=it.func.join(field.defName,field.comment,';')}}', 'SCHEMA', dbo, 'table', {{=it.entity.defKey}}, 'column', {{=field.defKey}};\n{{~}}\n","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","deleteTable":"IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[{{=it.entity.defKey}}]') AND type in (N'U')) DROP TABLE [dbo].[{{=it.entity.defKey}}];","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","deleteIndex":"","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`EXEC sp_rename '${before.defKey}','${after.defKey}'`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `IF ((SELECT COUNT(*) FROM ::fn_listextendedproperty('MS_Description','SCHEMA', 'dbo','TABLE', '${after.defKey}', NULL, NULL)) > 0)\n            \\n\\tEXEC sp_updateextendedproperty 'MS_Description', '${commentText}','SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            \\nELSE\n            \\n\\tEXEC sp_addextendedproperty 'MS_Description', '${commentText}', 'SCHEMA', 'dbo','TABLE', '${after.defKey}'\n            `;\n            ret.push(myText);\n            /*ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');*/\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD [${field.defKey}] ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `EXEC sp_addextendedproperty 'MS_Description', N'${commentText}','SCHEMA', N'dbo','TABLE', N'${entity.data.baseInfo.defKey}','COLUMN', N'${field.defKey}'`;\n                ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN [${field.defKey}]`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE [dbo].[${entity.data.baseInfo.defKey}]`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' ALTER COLUMN ['+after.defKey+']');\n            }else{\n                let renameText = `EXEC sp_rename '[dbo].[${entity.data.baseInfo.defKey}].[${before.defKey}]','${after.defKey}','COLUMN';`;\n                ret.push(renameText);\n                continue;\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"applyFor":"DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022","type":"dbDDL","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","deleteTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","deleteIndex":"{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"type":"dbDDL","applyFor":"89504F5D-94BF-4C9E-8B2E-44F37305FED5","createTable":"CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{?field.autoIncrement}}DECIMAL(17) GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}{{?}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"},{"applyFor":"0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307","type":"dbDDL","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{?field.autoIncrement}}INT IDENTITY(1,1) {{??}}{{=field.dbType}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","deleteTable":"","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","deleteIndex":"","message":"","update":""},{"type":"dbDDL","applyFor":"592C7013-143D-4E7B-AF64-0D7BF1E28230","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? ' AUTO_INCREMENT' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"},{"type":"dbDDL","applyFor":"77BD85E5-9D0D-4096-8427-CBA306FC9C6A","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"},{"applyFor":"11D1FB71-A587-4217-89BA-611B8A1F83E0","type":"dbDDL","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTO_INCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}';\n$blankline\n","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n","deleteTable":"","createIndex":"","deleteIndex":"","message":"","update":""},{"applyFor":"B363BE0B-F852-49B8-9B2E-F6D2174DEAC1","type":"dbDDL","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} {{= field.autoIncrement ? 'AUTOINCREMENT' : '' }} {{= field.defaultValue ? it.func.join('DEFAULT',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }} --{{=it.func.join(field.defName,field.comment,';')}}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n)  ; --{{=it.func.join(it.entity.defName,it.entity.comment,';') }}\n$blankline\n","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline\n"},{"type":"dbDDL","applyFor":"dictSQLTemplate","content":"/* 插入字典总表[{{=it.dict.defKey}}-{{=it.dict.defName}}] */\nINSERT INTO SYS_DICT(KEY_,LABEL,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=it.dict.defName}}','{{=it.dict.intro}}',1);\n/* 插入字典明细表 */\n{{~it.dict.items:item:index}}\nINSERT INTO SYS_DICT_ITEM(DICT_KEY,KEY_,LABEL,SORT_,INTRO,REVISION) VALUES('{{=it.dict.defKey}}','{{=item.defKey}}','{{=item.defName}}','{{=item.sort}}','{{=item.intro}}',1);\n{{~}}"},{"applyFor":"81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2","type":"dbDDL","createTable":"/**字段名,关键字等全部用的小写*/\ndrop table if exists {{=it.entity.defKey}};\n/**补充上库名,external关键字根据建表规范看是否添加*/\ncreate [external] table if not exists {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n/**这里把varchar,char,text,date,datetime字段全部映射为string类型.tinyint unsigned,bit,Integer,tinyint,smallint,mediumint映射为int类型,int unsigned映射为bigint.其它自定义映射规则根据自己情况修改*/\n/**当长度>0只有为decimal类型或double类型时才保留长度和小数的位数*/\n{{~it.entity.fields:field:index}}\n    {{=it.func.lowerCase(field.defKey)}} {{=it.func.lowerCase(field.type)=='varchar'||it.func.lowerCase(field.type)=='char'||it.func.lowerCase(field.type)=='text'||it.func.lowerCase(field.type)=='date'||it.func.lowerCase(field.type)=='datetime' ? 'string':it.func.lowerCase(field.type)=='tinyint unsigned'||it.func.lowerCase(field.type)=='bit'||it.func.lowerCase(field.type)=='integer'||it.func.lowerCase(field.type)=='tinyint'||it.func.lowerCase(field.type)=='smallint'||it.func.lowerCase(field.type)=='mediumint' ? 'int':it.func.lowerCase(field.type)=='int unsigned' ? 'bigint':it.func.lowerCase(field.type)}}{{?field.len>0&&(it.func.lowerCase(field.type)=='decimal'||it.func.lowerCase(field.type)=='double')}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{=')'}}{{?}}{{?}} comment '{{=it.func.join(field.defName,field.comment,'')}}' {{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n{{?}}\n)\n{{\n    let partitionedBy = it.entity.properties['partitioned by'];\n    partitionedBy = partitionedBy?partitionedBy:'请在扩展属性中配置[partitioned by]属性';\n}}\ncomment '{{=it.func.join(it.entity.defName,';') }}'\n/**是否分区表,分区字段名和字段注释自定义*/\n[partitioned by {{=partitionedBy}}]\n/**文件存储格式自定义*/\n[stored as orc]\n/**hdfs上的地址自定义*/\n[location xxx]\n;","createView":"","deleteTable":"","createIndex":"","deleteIndex":"","message":"","update":""},{"applyFor":"B91D99E0-9B7C-416C-8737-B760957DAF09","type":"appCode","content":"{{\n    var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1<10?\"0\"+today.getMonth():today.getMonth();\n    var days=today.getDate()<10?\"0\"+today.getDate():today.getDate();\n    var hours = today.getHours()<10?\"0\"+today.getHours():today.getHours();         \n\tvar minutes = today.getMinutes()<10?\"0\"+today.getMinutes():today.getMinutes();      \n\tvar seconds = today.getSeconds()<10?\"0\"+today.getSeconds():today.getSeconds();    \n}}\n// Package models  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\n// author : http://www.liyang.love\n// date : {{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n// desc : {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}\npackage models\n\n$blankline\n\n// {{=it.func.camel(it.entity.defKey,true) }}  {{=it.func.join(it.entity.defName,it.entity.comment,'，')}}。\n// 说明:{{=it.entity.comment}}\n// 表名:{{=it.entity.defKey}}\n// group: {{=it.func.camel(it.entity.defKey,true) }}\n// obsolete:\n// appliesto:go 1.8+;\n// namespace:hongmouer.his.models.{{=it.func.camel(it.entity.defKey,true) }}\n// assembly: hongmouer.his.models.go\n// class:HongMouer.HIS.Models.{{=it.func.camel(it.entity.defKey,true) }}\n// version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\ntype {{=it.func.camel(it.entity.defKey,true) }} struct {\n    {{~it.entity.fields:field:index}}\n    {{=formatGoLang(it.func.camel(field.defKey,true),null,field,it.entity.fields,null,1)}} {{=formatGoLang(field.type,\"type\",field,it.entity.fields,10,3)}}  `gorm:\"column:{{=field.primaryKey?\"primaryKey;\":\"\"}}{{=field.defKey}}\" json:\"{{=it.func.camel(field.defKey,true)}}\"` {{=formatGoLang(\"gorm:column:\"+field.defKey+\" json:\"+it.func.camel(field.defKey,true),null,field,it.entity.fields,null,2)}}  //type:{{=formatGoLang(field.type,\"type\",field,it.entity.fields,null,3)}}  comment:{{=formatGoLang(it.func.join(field.defName,field.comment,';'),\"defName\",field,it.entity.fields,null,4)}}  version:{{=fullYear}}-{{=month}}-{{=days}} {{=hours}}:{{=minutes}}\n    {{~}}\n}\n\n\n$blankline\n// TableName 表名:{{=it.entity.defKey}}，{{=it.entity.defName}}。\n// 说明:{{=it.entity.comment}}\nfunc (ZentaoUserInfo) TableName() string {\n\treturn \"{{=it.entity.defKey}}\"\n}\n\n{{\n\nfunction formatGoLang(str, fieldName, field, fileds, emptLength, isFiled) {\n    var maxLength = 0;\n\n    if (isFiled == 1) {\n        for (var i = 0; i < fileds.length; i++) {\n            if (getBlength(it.func.camel(fileds[i].defKey, true)) > maxLength) {\n                maxLength = getBlength(it.func.camel(fileds[i].defKey, true)) + 2;\n            }\n        }\n    } else if (isFiled == 2) {\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = \"gorm:column:\" + fileds[i].defKey + \" json:\" + it.func.camel(fileds[i].defKey, true);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 2;\n            }\n        }\n        var empt = \"\";\n        var strLength = getBlength(str);\n        if (field.primaryKey) {\n            strLength += getBlength(\"primaryKey;\");\n        }\n        for (var j = 0; j < maxLength - strLength; j++) {\n            empt += ' ';\n        }\n        return empt;\n    } else if (isFiled == 3) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = eval(\"fileds[\" + i + \"].\" + fieldName);\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    } else if (isFiled == 4) {\n        /*获取某个字段的最大长度*/\n        for (var i = 0; i < fileds.length; i++) {\n            var newStr = fileds[i].comment + \";\" + fileds[i].defName;\n            if (getBlength(newStr) > maxLength) {\n                maxLength = getBlength(newStr) + 1;\n            }\n        }\n    }\n    else {\n        maxLength = emptLength;\n    }\n\n    var strLength = getBlength(str);\n    for (var j = 0; j < maxLength - strLength; j++) {\n        str += ' ';\n    }\n    return str;\n}\n\nfunction getBlength(str) {\n    var n = 0;\n    for (var i = str.length; i--;) {\n        n += str.charCodeAt(i) > 255 ? 2 : 1;\n    }\n    return n;\n} \n\n}}"},{"applyFor":"BDF457FD-9F98-4AC3-A705-7587B00A3BAB","type":"appCode","struct":"use chrono::{DateTime, Local};\nuse serde::{Deserialize, Serialize};\n$blankline\n/// {{=it.entity.defName}}\n#[derive(Serialize, Deserialize, Debug, Clone)]\n{{  var today=new Date();\n    var fullYear=today.getFullYear();\n    var month=today.getMonth() + 1;\n    var days=today.getDate();\n    \n    var pkVarName = \"undefinedId\";\n    var pkDataType = \"String\";\n    it.entity.fields.forEach(function(field){\n        if(field.primaryKey){\n            pkVarName = it.func.camel(field.defKey,false);\n            pkDataType = field[\"type\"];\n            return;\n        }\n    });\n    \n    var pkgName = it.entity.env.base.nameSpace;\n    var beanClass = it.entity.env.base.codeRoot;\n    var beanVarName = beanClass.charAt(0).toLowerCase()+beanClass.slice(1);\n    \n}}\npub struct {{=beanClass}} {\n    {{~it.entity.fields:field:index}}\n    {{\n        let fieldDateType = field.type;\n        if(!field.notNull){\n            fieldDateType = 'Option<'+fieldDateType+'>';\n        }\n    }}/// {{=field.defName}}\n    pub {{=it.func.camel(field.defKey,false)}}: {{=fieldDateType}},\n    {{~}}\n}\n"},{"applyFor":"56F4B55B-F0B8-4049-9E6B-50B95C1D793A","type":"dbDDL","createTable":"CREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.autoIncrement ? '' : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createView":"CREATE VIEW {{=it.view.defKey}} AS\nSELECT \n{{~it.view.fields:field:index}}\n    {{=field.refEntity}}.{{=field.refEntityField}} AS {{=field.defKey}}{{= index < it.view.fields.length-1 ? ',' : ''}}\n{{~}}\nFROM {{~it.view.refEntities:refEntity:index}}{{=refEntity}}{{= index < it.view.refEntities.length-1 ? ',' : ''}}{{~}};\n$blankline","deleteTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};","createIndex":"{{~ it.entity.indexes:index}}\nCREATE {{? index.unique}}UNIQUE {{?}}INDEX {{=index.defKey}} ON {{=it.entity.defKey}}({{ fieldsKeys = index.fields.map(function(field){return field.fieldDefKey}) ; }}{{=it.func.join(...fieldsKeys,',')}});\n{{~}}","deleteIndex":"{{~ it.entity.indexes:index}}\nDROP INDEX {{=index.defKey}} ;\n{{~}}","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* -------------------------------------------------- */\n创建表：\n{{~ createEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* -------------------------------------------------- */\n删除表：\n{{~ dropEntities:entity}}\n    {{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* -------------------------------------------------- */\n修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n    {{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n    {{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n    {{?}}{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}\n    {{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('\\n\\t建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('\\n\\t解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}\n{{=indexChanged?'\\n\\t更改了索引':''}}\n{{=changed?'\\n\\t更改了属性':''}}\n{{=relaArray.length>0?relaArray.join(''):''}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD (${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            ddlItem += ')';\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            changeDDL += ('MODIFY ('+after.defKey+'');\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            let defaultValue = after.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n            \n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            changeDDL += ')';\n            ret.push(`${firstDDL} ${changeDDL};`);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"applyFor":"483F9346-C99E-4014-A1D2-A554606BD8A3","type":"dbDDL","createTable":"{{let dorisDistributedBy = it.entity.properties['dorisDistributedBy'];\n    dorisDistributedBy = dorisDistributedBy?dorisDistributedBy:'请在表的扩展属性中配置[dorisDistributedBy]属性';\n}}CREATE TABLE IF NOT EXISTS  {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    `{{=field.defKey}}` {{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}} {{= field.notNull ? 'NOT NULL' : '' }} COMMENT '{{=it.func.join(field.defName,field.comment,';')}}' {{= index < it.entity.fields.length-1 ? ',' : '' }}\n{{~}}\n)  COMMENT '{{=it.func.join(it.entity.defName,it.entity.comment,';') }}'\n{{=dorisDistributedBy}} ;\n$blankline\n","createView":"","deleteTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};","createIndex":"","deleteIndex":"","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}\n","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('ALTER TABLE '+before.defKey+' RENAME TO '+after.defKey);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            ret.push('ALTER TABLE '+after.defKey+' COMMENT \\''+commentText+'\\'');\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldAdded) { \n            let ddlItem = 'ADD COLUMN `'+field.defKey+'` '+field.dbType;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }\n            if(field.autoIncrement){\n                ddlItem += ' AUTO_INCREMENT';\n            }\n            if(field.defaultValue){\n                ddlItem += (' DEFAULT ' + field.defaultValue);\n            }\n            ddlItem += (' COMMENT \\''+field.defName+';'+field.comment+'\\'');\n            \n            if(field.index>0 && field.afterFieldKey){\n                ddlItem += (' AFTER '+field.afterFieldKey);\n            }\n            ret.push(ddlItem);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldRemoved) { \n            ret.push('DROP '+field.defKey);\n        }\n        return firstDDL+'\\n'+ret.join(',\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = 'ALTER TABLE '+entity.data.baseInfo.defKey;\n        for (let field of fieldModified) { \n            let changeDDL = '';\n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey === after.defKey){\n                changeDDL += (' MODIFY COLUMN `'+after.defKey+'`');\n            }else{\n                changeDDL += (' CHANGE COLUMN `'+before.defKey+'` `'+after.defKey+'`');\n            }\n            changeDDL += (' '+after.dbType);\n            if(after.len>0){\n                changeDDL += ('('+after.len);\n                if(parseInt(after.scale)>0){\n                    changeDDL += (','+after.scale);\n                }\n                changeDDL += ')';\n            }\n            if(after.notNull){\n                changeDDL += ' NOT NULL';\n            }\n            let defaultValue = '';\n            if(after.defaultValue != null && after.defaultValue.length>0){\n                defaultValue = (after.defaultValue);\n            }else{\n                defaultValue = 'NULL';\n            }\n            if(defaultValue != 'NULL'){\n                changeDDL += (' DEFAULT ' + defaultValue);\n            }\n\n            let comment = after.defName;\n            if(after.comment){\n                comment = comment + ';' + (after.comment||'');\n            }\n            if(comment){\n                changeDDL += (' COMMENT \\''+comment+'\\';');\n            }\n            \n            ret.push(firstDDL+' '+changeDDL);\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"},{"applyFor":"ABF5836C-0B7C-4007-A41C-F869325E5842","type":"dbDDL","createTable":"DROP TABLE IF EXISTS {{=it.entity.defKey}};\nCREATE TABLE {{=it.entity.defKey}}(\n{{ pkList = [] ; }}\n{{~it.entity.fields:field:index}}\n    {{? field.primaryKey }}{{ pkList.push(field.defKey) }}{{?}}\n    {{=field.defKey}} {{? field.autoIncrement}}SERIAL{{??}}{{=field.type}}{{?field.len>0}}{{='('}}{{=field.len}}{{?field.scale>0}}{{=','}}{{=field.scale}}{{?}}{{=')'}}{{?}}{{?}}{{= field.notNull ? ' NOT NULL' : '' }}{{= field.defaultValue ? it.func.join(' DEFAULT ',field.defaultValue,' ') : '' }}{{= index < it.entity.fields.length-1 ? ',' : ( pkList.length>0 ? ',' :'' ) }}\n{{~}}\n{{? pkList.length >0 }}\n    PRIMARY KEY ({{~pkList:pkName:i}}{{= pkName }}{{= i<pkList.length-1 ? ',' : '' }}{{~}})\n{{?}}\n);\n$blankline\n{{? it.entity.defKey || it.entity.defName}}COMMENT ON TABLE {{=it.entity.defKey}} IS '{{=it.func.join(it.entity.defName,it.entity.comment,';')}}';{{?}}\n{{~it.entity.fields:field:index}}\n{{? field.defName || field.comment}}COMMENT ON COLUMN {{=it.entity.defKey}}.{{=field.defKey}} IS '{{=it.func.join(field.defName,field.comment,';')}}';{{?}}\n{{~}}","createView":"","deleteTable":"","createIndex":"","deleteIndex":"","message":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChanged(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push('代码:'+(before.defKey||'NULL')+'->'+(after.defKey||'NULL'));\n        }\n        if(before.defName !== after.defName){\n            ret.push('显示名称:'+(before.defName||'NULL')+'->'+(after.defName||'NULL'));\n        }\n        if(before.comment !== after.comment){\n            ret.push('说明:'+(before.comment||'NULL')+'->'+(after.comment||'NULL'));\n        }\n        if(ret.length>0){\n            return '    基本信息:\\n\\t'+ret.join('\\n\\t');\n        }\n        return '';\n    };\n    \n    function buildAddedDesc(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        \n        for (let field of fieldAdded) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildRemovedDesc(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        \n        for (let field of fieldRemoved) { \n            let row = [];\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n    \n    function buildModifiedDesc(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        for (let field1 of fieldModified) { \n            let row = [];\n            let field = field1.before;\n            row.push(field.defKey+'['+field.defName+']');\n            ret.push(row.join(\"\"))\n        }\n        return ret;\n    };\n}}\n\n\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=entity.data.defKey}}[{{=entity.data.defName}}]\n{{~}}\n{{?}}\n\n{{? modifyEntities && modifyEntities.length > 0}}\n/* --------------- 修改表 --------------- */\n{{~ modifyEntities:entity}}\n{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]{{let changeText=baseChanged(entity.data.baseChanged);}}\n{{=baseChanged(entity.data.baseChanged)}}\n    {{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n    修改字段：\n    {{='\\t'}}{{=buildModifiedDesc(entity).join('\\n\\t')}}{{?}}{{\n        /*计算是否调整了属性*/\n        let propAdded = entity.data.propAdded || [];\n        let propRemoved = entity.data.propRemoved || [];\n        let propModified = entity.data.propModified || [];\n        let changed = propAdded.length>0 || propRemoved.length>0 || propModified.length>0;\n        /*计算关联是否调整*/\n        let refEntityAdd = entity.data.refEntityAdd || [];\n        let refEntityRemoved = entity.data.refEntityRemoved || [];\n        let relaArray = [];\n        for (let rela of refEntityAdd) {\n            relaArray.push('建立关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        for (let rela of refEntityRemoved) {\n            relaArray.push('解除关联:'+rela.defKey+'['+rela.defName+']');\n        }\n        /*索引是否修改过*/\n        let indexChanged = entity.data.indexChanged;\n    }}{{=indexChanged?'\\n\\t更改了索引':''}}{{=changed?'\\n\\t更改了属性':''}}{{=relaArray.length>0?('\\n\\t'+relaArray.join('\\n\\t')):''}}\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n    添加字段：\n{{='\\t'}}{{=buildAddedDesc(entity).join('\\n\\t')}}\n{{?}}{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n    删除字段：\n{{='\\t'}}{{=buildRemovedDesc(entity).join('\\n\\t')}}\n{{?}}\n{{~}}\n{{?}}","update":"{{\n    let createEntities = it.changes.filter(function(row){return (row.opt==='add'&&row['type']==='entity');});\n    let dropEntities   = it.changes.filter(function(row){return (row.opt==='delete'&&row['type']==='entity');});\n    let modifyEntities = it.changes.filter(function(row){return (row.opt==='update'&&row['type']==='entity');});\n    \n    function baseChangedDDL(beforeAfter){\n        if(beforeAfter == null){\n            return '';\n        }\n        let ret = [];\n        let before = beforeAfter.before || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        let after = beforeAfter.after || {\"defKey\":\"\",\"defName\":\"\",\"comment\":\"\"};\n        if(before.defKey !== after.defKey){\n            ret.push(`ALTER TABLE ${before.defKey} RENAME TO ${after.defKey}`);\n        }\n        let commentText = '';\n        let commentChanged = false;\n        if(before.defName !== after.defName){\n            commentText = after.defName;\n            commentChanged = true;\n        }\n        if(before.comment !== after.comment){\n            commentChanged = true;\n            if(commentText){\n                commentText = (commentText+ ';'+after.comment)\n            }else{\n                commentText = after.comment\n            }\n        }\n        if(commentChanged){\n            let myText = `COMMENT ON TABLE ${after.defKey} IS '${commentText}'`;\n            ret.push(myText);\n        }\n        let baseText = '-- 基本信息:\\n';\n        return baseText+ret.join(';\\n')+';';\n    };\n    \n    function buildAddedDDL(entity){\n        let ret = [];\n        let fieldAdded = entity.data.fieldAdded||[];\n        if(fieldAdded.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldAdded) { \n            let ddlItem = `ADD COLUMN ${field.defKey} ${field.dbType}`;\n            /*处理数据类型长度*/\n            if(field.len>0){\n                ddlItem += ('('+field.len);\n                if(parseInt(field.scale)>0){\n                    ddlItem += (','+field.scale);\n                }\n                ddlItem += ')';\n            }\n            if(field.notNull){\n                ddlItem += ' NOT NULL';\n            }            \n            let defaultValue = field.defaultValue;\n            defaultValue = (defaultValue==null)?\"\":(\"\"+defaultValue);\n            if(defaultValue.length>0){\n                ddlItem += (' DEFAULT ' + defaultValue);\n            }\n\n            ret.push(`${firstDDL} ${ddlItem}`);\n            \n            /*处理字段注释*/\n            let fieldComments = [];\n            if(field.defName != null &&field.defName.length>0){\n                fieldComments.push(field.defName);\n            }\n            if(field.comment != null &&field.comment.length>0){\n                fieldComments.push(field.comment);\n            }\n            let commentText = fieldComments.join(';');\n            if(commentText != null && commentText.length > 0){\n                let commentDDL = `COMMENT ON COLUMN ${entity.data.baseInfo.defKey}.${field.defKey} IS '${commentText}'`;\n                 ret.push(commentDDL);\n            }\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildRemovedDDL(entity){\n        let ret = [];\n        let fieldRemoved = entity.data.fieldRemoved||[];\n        if(fieldRemoved.length == 0){\n            return '';\n        }\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldRemoved) { \n            ret.push(`${firstDDL} DROP COLUMN ${field.defKey}`);\n        }\n        return '\\n'+ret.join(';\\n');\n    };\n    \n    function buildModifiedDDL(entity){\n        let ret = [];\n        let fieldModified = entity.data.fieldModified||[];\n        \n        let firstDDL = `ALTER TABLE ${entity.data.baseInfo.defKey}`;\n        for (let field of fieldModified) { \n            let before = field.before || {};\n            let after = field.after || {};\n            if(before.defKey !== after.defKey){\n                let renameText = `ALTER TABLE ${entity.data.baseInfo.defKey} RENAME COLUMN ${before.defKey} TO ${after.defKey};`;\n                ret.push(renameText);\n            }\n            /*如果没有变化，则不生成变更语句*/\n            if(before.dbType === after.dbType \n            && before['len'] === after['len'] \n            && before.scale === after.scale\n            && before.primaryKey === after.primaryKey\n            && before.notNull === after.notNull\n            && before.autoIncrement === after.autoIncrement\n            && before.defaultValue === after.defaultValue){\n                continue;\n            }\n            if(before.dbType !== after.dbType || before.len !== after.len || before.scale !== after.scale){\n                let dbTypeDDL = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${after.defKey} TYPE ${before.dbType}`;\n                if(after.len>0){\n                    dbTypeDDL += ('('+after.len);\n                    if(parseInt(after.scale)>0){\n                        dbTypeDDL += (','+after.scale);\n                    }\n                    dbTypeDDL += ')';\n                }\n                ret.push(dbTypeDDL+';');\n            }\n            \n            if(before.defaultValue !== after.defaultValue){\n                let defaultDDL = '';\n                let defaultValue = after.defaultValue;\n                defaultValue = (defaultValue==null)?\"NULL\":(\"\"+defaultValue);\n                if(defaultValue.length>0){\n                    defaultDDL += ('SET DEFAULT ' + defaultValue);\n                }\n                let defaultTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${defaultDDL};`;\n                ret.push(defaultTpl);\n            }\n            \n            if(before.notNull !== after.notNull){\n                let notNullDDL= 'SET NULL';\n                if(after.notNull){\n                    let notNullDDL= 'SET NOT NULL';\n                }\n                let notNullTpl = `ALTER TABLE ${entity.data.baseInfo.defKey} ALTER COLUMN ${notNullDDL};`;\n                ret.push(notNullTpl);\n            }\n        }\n        return ret;\n    };\n}}\n{{? createEntities && createEntities.length > 0}}\n/* --------------- 创建表 --------------- */\n{{~ createEntities:entity}}\n{{=it.func.createDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? dropEntities && dropEntities.length > 0}}\n/* --------------- 删除表 --------------- */\n{{~ dropEntities:entity}}\n{{=it.func.dropDDL(entity.data,entity['type'])}}\n{{~}}\n{{?}}\n\n\n{{? modifyEntities && modifyEntities.length > 0}}\n{{~ modifyEntities:entity}}\n/* --------------- 修改表 --------------- */\n-- 修改表：{{=entity.data.baseInfo.defKey}}[{{=entity.data.baseInfo.defName}}]\n{{=baseChangedDDL(entity.data.baseChanged)}}\n{{? entity.data.fieldModified && entity.data.fieldModified.length > 0}}\n-- 修改字段：\n{{=buildModifiedDDL(entity).join('\\n')}}\n{{?}}{{\n/*索引是否修改过*/\nlet indexChanged = entity.data.indexChanged;\n}}\n{{? indexChanged }}\n-- 索引重建\n{{=it.func.indexRebuildDDL(entity.data.baseInfo,entity.data.newIndexes,entity.data.fullFields,entity['type'])}}\n{{?}}\n\n{{? entity.data.fieldAdded && entity.data.fieldAdded.length > 0}}\n-- 添加字段：\n{{=buildAddedDDL(entity)}};\n{{?}}\n\n{{? entity.data.fieldRemoved && entity.data.fieldRemoved.length > 0}}\n-- 删除字段：\n{{=buildRemovedDDL(entity)}};\n{{?}}\n{{~}}\n{{?}}"}],"generatorDoc":{"docTemplate":""},"relationFieldSize":"15","uiHint":[{"defKey":"Input","defName":"普通输入框","id":"642D2E0A-8846-4549-BE56-8C0473F26EDE"},{"defKey":"Select","defName":"下拉输入框","id":"FB111359-2B73-4443-926C-08A98E446448"},{"defKey":"CheckBox","defName":"复选框","id":"0CB8A6C9-1115-4FC0-B51E-5C028065082F"},{"defKey":"RadioBox","defName":"单选框","id":"5C04987A-260F-4B7C-A5D5-22A181AAE9CA"},{"defKey":"Double","defName":"小数输入","id":"8D5BAFE4-E15C-4707-A047-8EE59C58E70F"},{"defKey":"Integer","defName":"整数输入","id":"9999AF2A-A44E-415C-A2DC-D7C613BD0073"},{"defKey":"Money","defName":"金额输入","id":"2B0C3D0C-7BAF-4B36-81AD-9362B5E5DC2E"},{"defKey":"Date","defName":"日期输入","id":"E4D94E14-F695-487F-AFC2-4D888009B7DA"},{"defKey":"DataYearMonth","defName":"年月输入","id":"936927E3-DD2D-4096-87FD-074CDE278D59"},{"defKey":"Text","defName":"长文本输入","id":"D89DD4F1-ADAC-4469-BF8D-B3FF41AE7963"},{"defKey":"RichText","defName":"富文本输入","id":"C134EB1F-4CFF-49E0-882F-2C6FB275CB20"}],"headers":[{"refKey":"defKey","hideInGraph":false,"value":"字段代码","freeze":true},{"refKey":"defName","hideInGraph":false,"value":"显示名称","freeze":false},{"refKey":"primaryKey","hideInGraph":false,"value":"主键","freeze":false},{"refKey":"notNull","hideInGraph":true,"value":"不为空","freeze":false},{"refKey":"autoIncrement","hideInGraph":true,"value":"自增","freeze":false},{"refKey":"domain","hideInGraph":true,"value":"数据域","freeze":false},{"refKey":"type","hideInGraph":false,"value":"数据类型","freeze":false},{"refKey":"len","hideInGraph":false,"value":"长度","freeze":false},{"refKey":"scale","hideInGraph":false,"value":"小数位数","freeze":false},{"refKey":"comment","hideInGraph":true,"value":"说明","freeze":false},{"refKey":"refDict","hideInGraph":true,"value":"数据字典","freeze":false},{"refKey":"defaultValue","hideInGraph":true,"value":"默认值","freeze":false},{"refKey":"isStandard","hideInGraph":false,"value":"标准字段","enable":false,"freeze":false},{"refKey":"uiHint","hideInGraph":true,"value":"UI建议","enable":true,"freeze":false},{"refKey":"extProps","hideInGraph":true,"value":"拓展属性","enable":true,"freeze":false},{"refKey":"attr1","value":"属性1","hideInGraph":true,"enable":true,"freeze":false},{"refKey":"attr2","value":"属性2","hideInGraph":true,"enable":false,"freeze":false},{"refKey":"attr3","value":"属性3","hideInGraph":true,"enable":false,"freeze":false},{"refKey":"attr4","value":"属性4","hideInGraph":true,"enable":false,"freeze":false},{"refKey":"attr5","value":"属性5","hideInGraph":true,"enable":false,"freeze":false},{"refKey":"attr6","value":"属性6","hideInGraph":true,"enable":false,"freeze":false},{"refKey":"attr7","value":"属性7","hideInGraph":true,"enable":false,"freeze":false},{"refKey":"attr8","value":"属性8","hideInGraph":true,"enable":false,"freeze":false},{"refKey":"attr9","value":"属性9","hideInGraph":true,"enable":false,"freeze":false}],"modelType":"modalGroup","recentColors":["#d148d1","#ce4bce","#831b83","#dd31dd","#da2fda","#e988e9","#000000","#DDE5FF"],"DDLToggleCase":"L"},"entities":[{"id":"FD10DD8F-6F48-4C49-B04C-C8E2FA5969C4","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"frs_face_record","defName":"人脸特征","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true,"code":"relationNoShow","value":"关系图","newCode":"hideInGraph","com":"Icon","relationNoShow":true},{"refKey":"defKey","freeze":true,"hideInGraph":false,"code":"name","value":"字段代码","newCode":"defKey","com":"Input","relationNoShow":false},{"refKey":"defName","freeze":false,"hideInGraph":false,"code":"chnname","value":"显示名称","newCode":"defName","com":"Input","relationNoShow":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false,"code":"pk","value":"主键","newCode":"primaryKey","com":"Checkbox","relationNoShow":false},{"refKey":"notNull","freeze":false,"hideInGraph":true,"code":"notNull","value":"不为空","newCode":"notNull","com":"Checkbox","relationNoShow":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true,"code":"autoIncrement","value":"自增","newCode":"autoIncrement","com":"Checkbox","relationNoShow":true},{"refKey":"domain","freeze":false,"hideInGraph":true,"code":"type","value":"数据域","newCode":"domain","com":"Select","relationNoShow":true},{"refKey":"type","freeze":false,"hideInGraph":false,"code":"dataType","value":"数据类型","newCode":"type","com":"Text","relationNoShow":false},{"refKey":"len","freeze":false,"hideInGraph":false,"code":"len","value":"长度","newCode":"len","com":"Input","relationNoShow":false},{"refKey":"scale","freeze":false,"hideInGraph":false,"code":"scale","value":"小数位数","newCode":"scale","com":"Input","relationNoShow":false},{"refKey":"comment","freeze":false,"hideInGraph":true,"code":"remark","value":"说明","newCode":"comment","com":"Input","relationNoShow":true},{"refKey":"refDict","freeze":false,"hideInGraph":true,"code":"refDict","value":"数据字典","newCode":"refDict","com":"SearchSelect","relationNoShow":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true,"code":"defaultValue","value":"默认值","newCode":"defaultValue","com":"Input","relationNoShow":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false,"code":"isStandard","value":"标准字段","newCode":"isStandard","com":"label","relationNoShow":false,"enable":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true,"code":"uiHint","value":"UI建议","newCode":"uiHint","com":"Select","relationNoShow":true,"enable":true},{"refKey":"extProps","freeze":false,"hideInGraph":true,"code":"extProps","value":"拓展属性","newCode":"extProps","com":"linkButton","relationNoShow":true,"enable":true},{"refKey":"attr1","freeze":false,"hideInGraph":true,"value":"属性1","enable":true},{"refKey":"attr2","freeze":false,"hideInGraph":true,"value":"属性2","enable":false},{"refKey":"attr3","freeze":false,"hideInGraph":true,"value":"属性3","enable":false},{"refKey":"attr4","freeze":false,"hideInGraph":true,"value":"属性4","enable":false},{"refKey":"attr5","freeze":false,"hideInGraph":true,"value":"属性5","enable":false},{"refKey":"attr6","freeze":false,"hideInGraph":true,"value":"属性6","enable":false},{"refKey":"attr7","freeze":false,"hideInGraph":true,"value":"属性7","enable":false},{"refKey":"attr8","freeze":false,"hideInGraph":true,"value":"属性8","enable":false},{"refKey":"attr9","freeze":false,"hideInGraph":true,"value":"属性9","enable":false}],"fields":[{"defKey":"face_record_id","defName":"人脸数据ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"37F60B08-CDFB-447F-A868-8B7FF282ACA9"},{"defKey":"user_id","defName":"用户ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"F45154FF-DE43-49E7-8EA9-6A5CEE3558A9"},{"defKey":"data_path","defName":"人脸数据路径","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"B2B84343-EDFF-4E45-BDEE-9910C54D7580"},{"defKey":"source","defName":"数据来源","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"CF048DA6-2991-4355-AD2B-62951559D263"},{"defKey":"capture_time","defName":"捕获时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"85EF0CB9-A5A8-43DF-8C3A-212C99B1E409"},{"defKey":"confidence_score","defName":"置信度分数","comment":"","type":"DECIMAL","len":5,"scale":2,"primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","extProps":{},"domain":"","id":"F0DA0EF6-F417-4948-A8EE-FA7AFE45FD5E"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"80C41E16-8128-4CB0-BA07-51215667C34F","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"5472791D-A078-45D0-B613-51CCC05A3601","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"BC4ADB5B-5599-42F8-BC5B-764A2230FFC5","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"E0731BEC-9183-4A1C-9919-C6EB130FC66C","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"ADF9191F-DD2F-453B-9187-297BF65C109A","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"E55D7450-12AA-4991-AFB2-DA812B4AE207","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"},"attr1":""}],"correlations":[],"indexes":[],"type":"P"},{"id":"25B7503E-EF12-4927-A71E-C4A1AEDEB235","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"sys_user","defName":"用户","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"user_id","defName":"用户ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"A8297D55-D108-4C51-97A0-EE4662BE9A6D","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"username","defName":"用户名","comment":"登录用","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"8CAF5678-AED7-4132-B026-02AC344755B9","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64"},{"defKey":"nickname","defName":"昵称","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"9782BA5D-E530-40B8-9F5D-6B4CD06D8F88"},{"defKey":"password","defName":"密码","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"591F80E3-0241-4B28-9B42-225E60B2364B","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64"},{"defKey":"gender","defName":"性别","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"136C6624-4497-41A1-9D75-84D54B1DD6BA","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"2B3C58DD-1DF4-46F4-8793-BE43CDF236F6"},{"defKey":"avatar","defName":"头像地址","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"041A4B1F-FDE9-41C6-8700-84D259101983","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64"},{"defKey":"phone_number","defName":"电话号码","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"domain":"F087A465-62CE-4135-9CBE-89054F970B04","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"4B2F3F7B-322A-496A-996A-97F9DDF059EA","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64"},{"defKey":"login_ip","defName":"最后登录IP","comment":"","type":"VARCHAR","len":128,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"298F07CE-B472-4DA4-BCD7-7B2EED36DA6E"},{"defKey":"login_date","defName":"最后登录时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"92F052A8-EA0E-4449-96B6-DF4A30DDF7E0"},{"defKey":"status","defName":"启用状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"TRUE","hideInGraph":false,"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"4253CE67-6D81-42BB-A14C-48E82D3963EE","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","isStandard":true,"refStandard":"CAB96AFB-54F4-4410-8452-370297A67009"},{"defKey":"del_flag","defName":"删除标识","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"FALSE","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"DF01D471-FAFF-4C3D-AF0F-9FC56393E256","isStandard":true,"refStandard":"4751B67B-6B86-4C32-AA79-63EBD3F4F4C7"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"NULL","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"08F8E7C5-35D1-4079-B116-936E885AE347"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"44FC4333-E281-4FAC-9F76-D04F0515A1BF","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"AD060ED9-693C-4AB7-98B4-4E1420AB6FDA","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"5608CCC5-2FFF-44E0-B483-ABE13CDE51ED","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"7AAF71C8-E6A9-4542-87B7-AFC4BFC3D9DD","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"B6B301DD-8051-4132-836B-B73683221C8D","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"DAA00017-5BD4-481F-B914-4DB15A4E6DD2","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"637CF45A-4E57-47FC-A80B-65E541002249","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"sys_dict_type","defName":"字典类型","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"dict_id","defName":"字典主键","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"3566835A-6AA9-4581-93CB-32393CAC1449"},{"defKey":"dict_name","defName":"字典名称","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"E7D9E7C3-101B-4263-A1B3-03A073A7E6AA"},{"defKey":"dict_type","defName":"字典类型","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"8AC9D5F0-2EC1-44EA-94AB-A0406A7CD73F"},{"defKey":"status","defName":"启用状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"TRUE","hideInGraph":false,"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"02C3A93C-F9BB-4D41-81FF-251E6E5F05F4","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","isStandard":true,"refStandard":"CAB96AFB-54F4-4410-8452-370297A67009"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"A5278E11-2D45-4E9C-9CDD-F2CFE6DB0645"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"7117D037-6FBF-4B74-882F-F6BCCC39694F","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"F30B9C3E-2D3D-4EE2-A843-FB0A49C41E87","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"FAA34DEF-125B-4926-8691-522AFEF100C1","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"DA0C07B8-7D37-4B71-92EE-5FC96E8E0EFC","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"2A268C65-E0C9-4E05-A927-1CE489096308","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"170997F8-D5AA-46F0-8822-685B58F2319A","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"03D2673F-34FD-4110-8061-D34288C54651","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"sys_dict_data","defName":"字典数据","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"dict_code","defName":"字典编码","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"4AD13986-C638-49E2-A08D-3ADD588626F9"},{"defKey":"dict_sort","defName":"字典排序","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","extProps":{},"domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","id":"34CB4053-3D86-48E5-84E3-2C29ADB81751"},{"defKey":"dict_label","defName":"字典标签","comment":"给用户看的描述文本","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"97F94088-99B6-4F42-AA49-DEF53A943C3A"},{"defKey":"dict_value","defName":"字典键值","comment":"给程序处理的实际数据（越简单越好）","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"CF2DFCED-A5B4-4184-87D8-D94ADD7D02BD"},{"defKey":"dict_type","defName":"字典类型","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"07A21BDA-04FA-4660-8BF4-B1580DE74879"},{"defKey":"is_default","defName":"是否默认","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"FALSE","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"031009EC-CD48-42D5-8CAB-21BF422A19CE"},{"defKey":"status","defName":"启用状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"TRUE","hideInGraph":false,"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"3B071FA1-4662-41F5-9F01-8D90A7074B62","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","isStandard":true,"refStandard":"CAB96AFB-54F4-4410-8452-370297A67009"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"2AB35772-67AB-4FE8-AC30-DAC673B400CA"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"4A5BAC4B-866F-4DBE-B541-CCC2563C358F","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"695FF259-559D-4FF7-ADCE-3D43E9BAD241","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"785110A0-D804-4EBD-9B30-EED2F19BCC4F","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"397D47A9-A4F5-4967-8FFA-1EE38F11E8EE","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"2AB4D290-87E7-400C-8AEC-433280BFBFBE","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"76CB56F0-760B-464F-BE37-A86DF7977B09","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"6F20F2F2-E973-4380-9535-16E2A0EC1181","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"sys_role","defName":"角色","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"freeze":false,"refKey":"hideInGraph","hideInGraph":true},{"freeze":true,"refKey":"defKey","hideInGraph":false},{"freeze":true,"refKey":"defName","hideInGraph":false},{"freeze":false,"refKey":"primaryKey","hideInGraph":false},{"freeze":false,"refKey":"notNull","hideInGraph":true},{"freeze":false,"refKey":"autoIncrement","hideInGraph":true},{"freeze":false,"refKey":"domain","hideInGraph":true},{"freeze":false,"refKey":"type","hideInGraph":false},{"freeze":false,"refKey":"len","hideInGraph":false},{"freeze":false,"refKey":"scale","hideInGraph":false},{"freeze":false,"refKey":"comment","hideInGraph":true},{"freeze":false,"refKey":"refDict","hideInGraph":true},{"freeze":false,"refKey":"defaultValue","hideInGraph":true},{"freeze":false,"refKey":"isStandard","hideInGraph":false},{"freeze":false,"refKey":"uiHint","hideInGraph":true},{"freeze":false,"refKey":"extProps","hideInGraph":true}],"fields":[{"defKey":"role_id","defName":"角色ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"FDB0C3D0-74BC-4309-9299-5C06FFB5062F"},{"defKey":"role_name","defName":"角色名称","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"86D312C0-8013-4677-9364-2D5B03451ACE"},{"defKey":"role_key","defName":"权限字符","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"F274A70D-85A2-4FE1-8ABF-B66477E18158"},{"defKey":"sort_number","defName":"排序数字","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","extProps":{},"domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","id":"2F847903-47C3-4B08-8B77-8F96BB4655F2"},{"defKey":"data_scope","defName":"数据范围","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"DFB73BC6-6889-4FFB-9732-748DE7860437","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"D1E24682-C7A1-4AEE-BB1A-A1DD239143EC"},{"defKey":"status","defName":"启用状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"TRUE","hideInGraph":false,"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"95CAF65F-0EB6-4D92-A769-05D90481CEE6","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","isStandard":true,"refStandard":"CAB96AFB-54F4-4410-8452-370297A67009"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"72EB4B50-313F-4686-804E-CAF3458F7FED","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"D787F01A-0755-4B42-A222-623710CCBD6C","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"9E59628A-05F0-4A03-88EA-85ACFF86B178","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"6E246DDA-DF77-4277-AA36-BD880719DE2A","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"7A961395-C29E-4512-8C86-0AAB190543B9","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"134815D9-D7D4-4634-A6AF-CCDC02A5B0A6","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"AC07D79C-3AAE-4559-B501-0D300C3B6D71"}],"correlations":[],"indexes":[],"type":"P"},{"id":"705CDC71-CF34-4CD5-A772-80C7E579A933","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"sys_user_role_link","defName":"角色&用户","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"user_id","defName":"用户ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"3F143CB2-5D90-462E-B08F-787E82FB3885"},{"defKey":"role_id","defName":"角色ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"CAAD181E-1A54-4B2E-9F31-C5BF81B9E628"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"4DD79042-47EA-466B-A91F-CFE6F03C4221","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"178C5E0C-C01F-448B-A9C3-B5727AC43E9B","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"D68614C1-62D8-4AAD-AA5C-96A83AE4674B","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"90800F3D-8346-4A6D-95BE-ECAE28B402E5","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"16C46549-1690-44CB-9561-D1020B0FAD3E","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"686548F8-8DEB-4AAB-9D9E-092811F1A70F","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"BA6FE961-2B19-4069-A6B7-30002823F624","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_customer","defName":"客户","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"customer_id","defName":"客户ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"E0CEE90F-06C9-440E-9A38-E4F13A3E6B2F"},{"defKey":"origin","defName":"客源","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"D3269874-BEB6-4F71-AD83-04DB884F4B2B"},{"defKey":"name","defName":"姓名","comment":"真实姓名","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"4815BBD4-950D-4FFA-8EB1-7790D884FCF9"},{"defKey":"id_number","defName":"身份证号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"F087A465-62CE-4135-9CBE-89054F970B04","id":"255C561C-550A-4EA2-ACF0-AD5CCF8C3B38"},{"defKey":"phone_number","defName":"电话号码","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"F087A465-62CE-4135-9CBE-89054F970B04","id":"867B2FA5-0A8A-4466-B22E-43B77D94161A"},{"defKey":"gender","defName":"性别","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"D411B1EB-04B9-4F95-8157-371C84F39465"},{"defKey":"birthday","defName":"生日","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"6D5E48F0-9304-43FE-824F-5719119C431C"},{"defKey":"region","defName":"地区","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"0AD7C33F-8B75-4CCC-B015-C82BB95BE87D"},{"defKey":"email","defName":"邮箱","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"CD16EB5C-5B92-44C3-B3CD-F62087840FD0"},{"defKey":"checkin_times","defName":"入住次数","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","extProps":{},"domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","id":"6B6CB608-F17E-4DCA-BD4F-0B771C8E2A24"},{"defKey":"total_spent","defName":"总消费金额","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"0","hideInGraph":false,"refDict":"","baseType":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","extProps":{},"domain":"C3B1681B-99F9-4818-9E80-DE1652A51D85","id":"024E13A8-6DBC-4387-B56E-8E27D5BA82DA"},{"defKey":"last_spent_time","defName":"最近消费时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"C0436556-C80F-471C-87AD-36E64B0DDF76"},{"defKey":"del_flag","defName":"删除标识","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"FALSE","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"D9CA886F-251E-49EA-8E04-945DDA21D5D6","isStandard":true,"refStandard":"4751B67B-6B86-4C32-AA79-63EBD3F4F4C7"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"D4CAB547-93CF-4BFA-9603-FA119F8B02A1"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"E576C676-0E00-47E0-A139-520A3112BA6D","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"93BB0F03-5FC9-4484-A299-5D401AA8DE91","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"ABA91D23-F693-4C3C-943C-8D70BBCBA236","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"4516939E-C308-4723-A074-5FEFF8C97A6A","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"EFA2B757-163D-4133-8E20-6BF8103C7AAE","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"206DC35D-BC7D-4645-BF33-C633315B8C37","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"CB393D96-4818-4542-BEB8-D3A13AE78BA6","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_room","defName":"房间","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"room_id","defName":"房间ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"B459FCBC-47C1-4E1B-A744-50A7B56540B5"},{"defKey":"room_type_id","defName":"房型ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"A46D6536-D199-4F35-838C-4A986BF1A5F0"},{"defKey":"price","defName":"标准房费","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","extProps":{},"domain":"C3B1681B-99F9-4818-9E80-DE1652A51D85","id":"8743D07A-2254-4F45-B933-39A8F2DED02D"},{"defKey":"number","defName":"房间编号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"F087A465-62CE-4135-9CBE-89054F970B04","id":"1CC4626D-0826-4867-B42D-7307D8E75A73"},{"defKey":"dirty_flag","defName":"是否脏房","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"7492F31C-AEB9-44C3-BE46-6DD85978E3D6"},{"defKey":"del_flag","defName":"删除标识","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"FALSE","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"6C43539C-A891-4401-82A7-81B8AD8B88A9","isStandard":true,"refStandard":"4751B67B-6B86-4C32-AA79-63EBD3F4F4C7"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"C899C490-04E2-49AC-9BCF-CB9EF502B891"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"1819F515-A1CE-4135-A2ED-A76CCA1D934D","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"E7235DA6-2704-4045-867B-D5471374B48A","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"4FEA2EAD-3E47-4F3A-AE24-FA1FF3EC943A","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"AB4980C5-6F61-45A8-99D9-1EBCFA2AE781","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"96014A1A-E8CA-4D90-A56E-C216903D6FD8","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"59C46817-37E3-444D-A62F-41EB10AE197E","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"D4A874CD-3891-4D26-AA75-B9C8E2B32D63","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_room_type","defName":"房型","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"room_type_id","defName":"房型ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"41A25FEC-DA69-46A7-B640-106BD70D805E"},{"defKey":"room_name","defName":"房型名称","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"C1939923-99BA-405C-8B80-143B41C4CAF0"},{"defKey":"nick_name","defName":"房型别名","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"6468CE6F-6C72-482A-86BB-9283A3F13DB3"},{"defKey":"price","defName":"房型标价","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","extProps":{},"domain":"C3B1681B-99F9-4818-9E80-DE1652A51D85","id":"01D3D51B-F21F-4925-B87C-160FA1397170"},{"defKey":"quantity","defName":"房型数量","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","extProps":{},"domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","id":"2304BED4-4852-4464-8924-E9A70B58593B"},{"defKey":"description","defName":"房型描述","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"3E948CEC-3070-472C-AF92-F3CA11EC9D15","id":"7C5B78B1-1C45-4E03-BF89-A23849284016"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"23FCABF5-4D6D-4479-9F2D-BABA903F9ABA"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"7C8F1D5F-7806-4266-94ED-B80BC2CB0249","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"D190E2D8-190E-40AF-9DF9-65870D2FDDA3","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"EDE74C97-8C12-4F58-8A5B-41EA76F87D19","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"D7DE1B69-0EA6-43AD-A771-162A92908841","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"393B9BB4-A4DA-4ACD-B8FE-D8CEE79576BC","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"7656EF9A-F6A9-4A39-A721-3686957DCA08","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"522E762A-CB6C-4DAE-95E4-96C47762C395","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_checkin_record","defName":"入住记录（开房记录）","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"checkin_record_id","defName":"入住记录ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"F272DAF6-8EF6-42D5-97A5-669CC128E961"},{"defKey":"order_id","defName":"订单ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"CE670289-F1FA-4822-A961-0415E3CE5C3D"},{"defKey":"room_id","defName":"房间ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"3ED6D2E2-6194-4094-85F6-9F4AC066B878"},{"defKey":"customer_id","defName":"客户ID","comment":"主要的开房客人（出问题先找他）","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"83B22EA2-1DC8-42BA-9252-65A94FFED14F"},{"defKey":"room_amount","defName":"房费","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","extProps":{},"domain":"C3B1681B-99F9-4818-9E80-DE1652A51D85","id":"FEDCC00B-9053-4E01-A53E-1288B59027B7"},{"defKey":"checkin_type","defName":"入住类型","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"A1DC5A2C-C329-481A-86BD-8898245316DB","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"5C46A658-727D-4737-B934-7EEEF4BEAF63"},{"defKey":"checkin_status","defName":"入住状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"4BD32F5C-E966-4AB1-8B29-AEDF8B0C2BD7","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"639F00FE-2959-4B32-BA71-795D30E22774"},{"defKey":"pre_checkin_time","defName":"预计入住时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"F727AA3F-5FD9-47EA-AE06-623EC4F93C4E"},{"defKey":"act_checkin_time","defName":"实际入住时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"47DD94F1-0B87-49A0-8074-28889327DEA2"},{"defKey":"pre_checkout_time","defName":"预计退房时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"9A25843B-91FE-4230-A6DC-1AA0E832CF05"},{"defKey":"act_checkout_time","defName":"实际退房时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"19460B3B-CC30-47BA-AF33-DBC5B461F5C8"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"12A8E3BD-8FEA-4C90-AD5F-E77891B0D2F9"},{"defKey":"del_flag","defName":"删除标识","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"FALSE","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"D972FFC7-D3A9-464B-9B04-FBD39C47E625","isStandard":true,"refStandard":"4751B67B-6B86-4C32-AA79-63EBD3F4F4C7"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"C30C4A93-3588-4F98-9A9B-CE2129B72B99","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"164B0C7A-F5BF-4B2E-9D09-6BD1211BCA00","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"7A1780DC-220A-4CE1-AE36-450037F0C3EF","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"B68D060F-A243-4E3B-8962-086BA5BD6EB1","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"B4F000B9-60E2-4E3D-B302-C1AC0617953B","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"D63AFDDE-85E4-431E-A896-17E8F2B026F3","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"6BCD0187-655F-4F4E-B1B3-2665904AC08A","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_room_status_record","defName":"房态记录","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"room_status_record_id","defName":"房态记录ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"E7D7464F-7BC8-410C-90DE-159808025418"},{"defKey":"room_id","defName":"房间ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"D3E3BC7E-34BE-46AC-8EF4-9B21E64F7847"},{"defKey":"room_status","defName":"房间状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"4113429B-DAD0-4600-AFEF-FFBDBC2106B4","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"8CBEF543-19C5-4254-B0D4-7F8B7CE36F54"},{"defKey":"start_time","defName":"开始时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"12669341-C3F1-4074-BB8B-69AA4A344885"},{"defKey":"end_time","defName":"结束时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"D119FBEB-23DA-4BB4-9C07-EC7FA0962655"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"E26353E9-815A-43E4-B65F-32F627737012","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"5CD7A10A-07E8-4D29-A442-6F2BDDF7DA6E","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"26E514B3-3937-4398-8C1B-1FC479AF14AB","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"D96AF039-0768-4B01-8792-E2E251BDF74D","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"E036F679-B70F-4235-9A82-F8056B3EAF23","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"6DBD1E6D-A1EE-4D7B-A155-914E063D8A47","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"6B0D244B-924A-4A2F-86CF-D5616EE1FEB7","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_checkin_customer_link","defName":"入住记录&客户","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"customer_id","defName":"客户ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"05F39DCF-743E-407F-8B7A-28E896BE84CF"},{"defKey":"checkin_record_id","defName":"入住记录ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"6F5DE11C-830D-4982-9A3A-5FC385ACF535"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"1B924F9A-69BC-46BD-A7F3-9C4447A1DF8B","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"0B08E071-38F0-4FD8-BB1E-A463ABD4CCF4","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"FD537899-EB84-483E-9860-0ACA2AE39A16","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"B4FCE7C2-31FA-424F-AE59-DFFC6DBCF028","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"62DC0B3E-C2ED-4898-B4EE-FB12D3E854F2","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"34B3C940-8D65-4556-8235-73E443674076","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"24A00A4B-D807-486C-AF5D-D1BB63732A6B","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_tag","defName":"标签","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"tag_id","defName":"标签ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"E9A41B5E-BB49-44AA-97AD-5F0B72D721D0"},{"defKey":"label","defName":"标签文本","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"7D19896C-8E5C-457E-B2F5-92CD7640338B"},{"defKey":"color","defName":"标签颜色","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"E41C107C-518F-4DBB-98A6-2610481D9951"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"0321C3C8-101F-4606-B98A-0FA870A2501C","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"D518D5AF-BC87-4B40-8E03-C5482FE49828","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"558A1787-D480-4EF0-B78E-41F38F2EB5AF","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"E98A7AB0-E0FD-4C48-A0C7-C1935771330D","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"BA70FD46-A533-4BD2-B0B9-C5F6741C7DEF","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"60FD50BE-FB94-4B1E-A09F-0EA02081A9C6","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"E42F17A0-3413-4487-AEDF-76DEB462DC78","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_tag_customer_link","defName":"标签&客户","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"tag_id","defName":"标签ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"14D38600-12D3-4A83-B96D-442B7264158A"},{"defKey":"customer_id","defName":"客户ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"8C745DC7-C788-477F-9D5D-6F1E01EF52EC"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"EB1E817C-BDA0-4FEE-BE34-C52DF6628CF6","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"F5130A7C-9B9F-45A4-B1A9-60EADC6EDB18","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"DD5576CF-A4BD-4EE3-9B20-6CA39276CF0D","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"74B9D5F3-6F18-4B27-940C-5B5590BC304F","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"03A7B561-537F-43A0-97C7-18B89691E3AA","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"1D59A691-BE5B-4544-A83A-9B486F428CC9","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"F79CAAB8-5560-4F18-ADC5-CB54152E2662","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"sys_oper_log","defName":"操作日志记录","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"oper_id","defName":"日志主键","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"106C8EA2-39F9-4B61-A51F-01F1D997CD8F"},{"defKey":"title","defName":"模块标题","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"22FBD240-4463-4D29-A65C-1C2813B46574"},{"defKey":"business_type","defName":"业务类型","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"81BD70E6-1F65-442A-931B-CD7AE559B701"},{"defKey":"method","defName":"方法名称","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"712C60C8-7418-4ECF-9BFB-DD2964DEA711"},{"defKey":"request_method","defName":"请求方式","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"F087A465-62CE-4135-9CBE-89054F970B04","id":"F54AA822-F862-4080-AED0-75F5C0FB40EB"},{"defKey":"operator_type","defName":"操作类别","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"117CC077-7963-4AEC-BDA9-52E673C40FC2"},{"defKey":"oper_name","defName":"操作人员","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"E0C2D522-4DFD-4BF5-983B-01C914A0DB59"},{"defKey":"oper_url","defName":"请求URL","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"77D16066-FC3F-4B18-8514-611FB3E862FE"},{"defKey":"oper_ip","defName":"主机地址","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"FCA46CBB-B58B-4690-8B63-B19E95D0CA63","id":"D4333C1E-FF03-4A83-97B1-11D14198BDC2"},{"defKey":"oper_location","defName":"操作地点","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"CFB8DA17-B086-44DB-A758-EF737EBDE302"},{"defKey":"oper_param","defName":"请求参数","comment":"","type":"VARCHAR","len":2000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"48763117-E3B5-4590-AC10-A5956E06158B"},{"defKey":"json_result","defName":"返回参数","comment":"","type":"VARCHAR","len":2000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"4A9A17DA-7639-4D03-BD32-AFD1D104F034"},{"defKey":"status","defName":"操作状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"TRUE","hideInGraph":false,"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"E7C6B52C-9800-4212-ADF1-CCBE961A03F9","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","isStandard":true,"refStandard":"CAB96AFB-54F4-4410-8452-370297A67009"},{"defKey":"error_msg","defName":"错误消息","comment":"","type":"VARCHAR","len":2000,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"E802E1BD-4CB6-49D4-B881-B43CF618CC35"},{"defKey":"oper_time","defName":"操作时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"56310A46-A896-447E-B7D1-E217B1C835E6"},{"defKey":"cost_time","defName":"消耗时间","comment":"","type":"BIGINT","len":20,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"","id":"1FD96247-9965-44A9-BEAD-1372EE194DDA"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"2C776D3C-957C-4B63-9A26-328717DD81CA","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"0180DD91-4825-430B-B8C8-2B136C499465","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"}],"correlations":[],"indexes":[{"defKey":"idx_sys_oper_log_bt","defName":null,"unique":false,"comment":"","fields":[{"fieldDefKey":"81BD70E6-1F65-442A-931B-CD7AE559B701","ascOrDesc":"A","id":"53ABFDE7-331E-4C8C-A491-D47ACAD3A1A2"}],"id":"D64D9E68-D1D9-40A3-A148-6ED2752BA701"},{"defKey":"idx_sys_oper_log_s","defName":null,"unique":false,"comment":"","fields":[{"fieldDefKey":"E7C6B52C-9800-4212-ADF1-CCBE961A03F9","ascOrDesc":"A","id":"683112F9-5DF5-425A-ADCC-CBE5F3BEACA1"}],"id":"28555BAE-C7A2-4576-947D-739641119085"},{"defKey":"idx_sys_oper_log_ot","defName":null,"unique":false,"comment":"","fields":[{"fieldDefKey":"56310A46-A896-447E-B7D1-E217B1C835E6","ascOrDesc":"A","id":"8D763650-FE39-4C19-89B3-F0DCBE698655"}],"id":"F9B339AD-3C24-48D3-8961-5F55B6F5B78A"}],"type":"P"},{"id":"DAE2944E-1B78-4BEF-B010-E35E0642D517","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_order","defName":"订单","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true,"code":"relationNoShow","value":"关系图","newCode":"hideInGraph","com":"Icon","relationNoShow":true,"freeze":true},{"refKey":"defKey","freeze":true,"hideInGraph":false,"code":"name","value":"字段代码","newCode":"defKey","com":"Input","relationNoShow":false},{"refKey":"defName","freeze":false,"hideInGraph":false,"code":"chnname","value":"显示名称","newCode":"defName","com":"Input","relationNoShow":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false,"code":"pk","value":"主键","newCode":"primaryKey","com":"Checkbox","relationNoShow":false},{"refKey":"notNull","freeze":false,"hideInGraph":true,"code":"notNull","value":"不为空","newCode":"notNull","com":"Checkbox","relationNoShow":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true,"code":"autoIncrement","value":"自增","newCode":"autoIncrement","com":"Checkbox","relationNoShow":true},{"refKey":"domain","freeze":false,"hideInGraph":true,"code":"type","value":"数据域","newCode":"domain","com":"Select","relationNoShow":true},{"refKey":"type","freeze":false,"hideInGraph":false,"code":"dataType","value":"数据类型","newCode":"type","com":"Text","relationNoShow":false},{"refKey":"len","freeze":false,"hideInGraph":false,"code":"len","value":"长度","newCode":"len","com":"Input","relationNoShow":false},{"refKey":"scale","freeze":false,"hideInGraph":false,"code":"scale","value":"小数位数","newCode":"scale","com":"Input","relationNoShow":false},{"refKey":"comment","freeze":false,"hideInGraph":true,"code":"remark","value":"说明","newCode":"comment","com":"Input","relationNoShow":true},{"refKey":"refDict","freeze":false,"hideInGraph":true,"code":"refDict","value":"数据字典","newCode":"refDict","com":"SearchSelect","relationNoShow":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true,"code":"defaultValue","value":"默认值","newCode":"defaultValue","com":"Input","relationNoShow":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false,"code":"isStandard","value":"标准字段","newCode":"isStandard","com":"label","relationNoShow":false,"enable":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true,"code":"uiHint","value":"UI建议","newCode":"uiHint","com":"Select","relationNoShow":true,"enable":true},{"refKey":"extProps","freeze":false,"hideInGraph":true,"code":"extProps","value":"拓展属性","newCode":"extProps","com":"linkButton","relationNoShow":true,"enable":true},{"refKey":"attr1","freeze":false,"hideInGraph":true,"value":"属性1","enable":true},{"refKey":"attr2","freeze":false,"hideInGraph":true,"value":"属性2","enable":false},{"refKey":"attr3","freeze":false,"hideInGraph":true,"value":"属性3","enable":false},{"refKey":"attr4","freeze":false,"hideInGraph":true,"value":"属性4","enable":false},{"refKey":"attr5","freeze":false,"hideInGraph":true,"value":"属性5","enable":false},{"refKey":"attr6","freeze":false,"hideInGraph":true,"value":"属性6","enable":false},{"refKey":"attr7","freeze":false,"hideInGraph":true,"value":"属性7","enable":false},{"refKey":"attr8","freeze":false,"hideInGraph":true,"value":"属性8","enable":false},{"refKey":"attr9","freeze":false,"hideInGraph":true,"value":"属性9","enable":false}],"fields":[{"defKey":"order_id","defName":"订单ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"FB6DB409-1117-457A-A9A1-4A91BCF03C63","uiHint":null},{"defKey":"number","defName":"订单号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"2E4EACAA-6758-4690-BC41-33C1A0FAA331","uiHint":null},{"defKey":"customer_id","defName":"客户ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"E3E770A1-2DD9-4EAA-9B1B-C7674C6B4B15","uiHint":null},{"defKey":"total_amount","defName":"订单总金额","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","extProps":{},"domain":"C3B1681B-99F9-4818-9E80-DE1652A51D85","id":"3B754E0B-9356-4967-B1A7-3A1E67C1BF1C","uiHint":null},{"defKey":"order_status","defName":"订单状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"EF1E8D93-A4F5-4505-87B7-21C8FD52856F","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"83F9353E-1E44-416A-9389-F56FCEEF06D1","uiHint":null},{"defKey":"del_flag","defName":"删除标识","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"FALSE","hideInGraph":false,"refDict":null,"baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"E103C150-858D-4FA9-B898-79929482F1DA","isStandard":true,"refStandard":"4751B67B-6B86-4C32-AA79-63EBD3F4F4C7","uiHint":null},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"7228E546-0D26-4F50-87DE-AA47AD4886C8","uiHint":null},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":null,"uiHint":null,"id":"BF173D49-DD9A-491C-9A68-0094BB5214CA","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"9DD06DC1-CB8C-438B-82DD-76F937D343B1","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"87AAAB6A-923E-4BDA-891E-ECEAAA59BBE2","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":null,"uiHint":null,"id":"A7112109-C891-4E51-840F-78CDF17B7C37","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"5818125E-0C72-4D9A-B135-00ACD0DEA95C","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"EBDD748D-5D68-481B-8082-501F7D2EEB83","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"EDA8F853-0FFC-47A0-A855-70529002C5B7","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_pay_record","defName":"支付记录","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","freeze":true,"hideInGraph":true,"code":"relationNoShow","value":"关系图","newCode":"hideInGraph","com":"Icon","relationNoShow":true},{"refKey":"defKey","freeze":true,"hideInGraph":false,"code":"name","value":"字段代码","newCode":"defKey","com":"Input","relationNoShow":false},{"refKey":"defName","freeze":false,"hideInGraph":false,"code":"chnname","value":"显示名称","newCode":"defName","com":"Input","relationNoShow":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false,"code":"pk","value":"主键","newCode":"primaryKey","com":"Checkbox","relationNoShow":false},{"refKey":"notNull","freeze":false,"hideInGraph":true,"code":"notNull","value":"不为空","newCode":"notNull","com":"Checkbox","relationNoShow":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true,"code":"autoIncrement","value":"自增","newCode":"autoIncrement","com":"Checkbox","relationNoShow":true},{"refKey":"domain","freeze":false,"hideInGraph":true,"code":"type","value":"数据域","newCode":"domain","com":"Select","relationNoShow":true},{"refKey":"type","freeze":false,"hideInGraph":false,"code":"dataType","value":"数据类型","newCode":"type","com":"Text","relationNoShow":false},{"refKey":"len","freeze":false,"hideInGraph":false,"code":"len","value":"长度","newCode":"len","com":"Input","relationNoShow":false},{"refKey":"scale","freeze":false,"hideInGraph":false,"code":"scale","value":"小数位数","newCode":"scale","com":"Input","relationNoShow":false},{"refKey":"comment","freeze":false,"hideInGraph":true,"code":"remark","value":"说明","newCode":"comment","com":"Input","relationNoShow":true},{"refKey":"refDict","freeze":false,"hideInGraph":true,"code":"refDict","value":"数据字典","newCode":"refDict","com":"SearchSelect","relationNoShow":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true,"code":"defaultValue","value":"默认值","newCode":"defaultValue","com":"Input","relationNoShow":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false,"code":"isStandard","value":"标准字段","newCode":"isStandard","com":"label","relationNoShow":false,"enable":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true,"code":"uiHint","value":"UI建议","newCode":"uiHint","com":"Select","relationNoShow":true,"enable":true},{"refKey":"extProps","freeze":false,"hideInGraph":true,"code":"extProps","value":"拓展属性","newCode":"extProps","com":"linkButton","relationNoShow":true,"enable":true},{"refKey":"attr1","freeze":false,"hideInGraph":true,"value":"属性1","enable":true},{"refKey":"attr2","freeze":false,"hideInGraph":true,"value":"属性2","enable":false},{"refKey":"attr3","freeze":false,"hideInGraph":true,"value":"属性3","enable":false},{"refKey":"attr4","freeze":false,"hideInGraph":true,"value":"属性4","enable":false},{"refKey":"attr5","freeze":false,"hideInGraph":true,"value":"属性5","enable":false},{"refKey":"attr6","freeze":false,"hideInGraph":true,"value":"属性6","enable":false},{"refKey":"attr7","freeze":false,"hideInGraph":true,"value":"属性7","enable":false},{"refKey":"attr8","freeze":false,"hideInGraph":true,"value":"属性8","enable":false},{"refKey":"attr9","freeze":false,"hideInGraph":true,"value":"属性9","enable":false}],"fields":[{"defKey":"pay_record_id","defName":"支付记录ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"4498F6C3-6C37-428D-BD11-7FB1DCFFEF18","uiHint":null},{"defKey":"customer_id","defName":"客户ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"81AE5687-62F8-4636-B718-B5D0A37E9E2B","uiHint":null},{"defKey":"order_id","defName":"订单ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"0A09B1B3-AB2F-4585-9ECA-D5567E2E37FF","uiHint":null},{"defKey":"pay_type","defName":"支付类型","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"C05A5E85-B9C8-4D75-89DA-37FDD3B88B57","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"5A2631C4-5246-439E-ADAF-F66C8BCDBF20","uiHint":null},{"defKey":"pay_method","defName":"支付方式","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"AA955573-8174-4193-A50C-3646C78A4C8E","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"533EF011-B112-4226-9E6D-D75B1DA4AAD8","uiHint":null},{"defKey":"amount","defName":"支付金额","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","extProps":{},"domain":"C3B1681B-99F9-4818-9E80-DE1652A51D85","id":"A6A49DCE-FDF6-4485-8909-49C5BB4EA389","uiHint":null},{"defKey":"pay_time","defName":"支付时间","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{},"domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","id":"29E5B2CD-CDA8-4B3E-9049-130235C9BBC1","uiHint":null},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"9092C4E0-1A54-4859-ABBB-5B62DBC27573","id":"C14705F5-2BFA-42BC-9302-AA879F5423B6","uiHint":null},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":null,"uiHint":null,"id":"13EFAFC3-8F50-45F9-996B-114D871A5480","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"C40E2A58-FC99-4E41-813A-874EC8936F9C","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"2076E8AF-92B6-43F3-ADAB-E429CF87248E","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":null,"uiHint":null,"id":"8A96846B-7CCC-488B-A0F5-99C723D0B21D","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"41F11181-FBDE-4496-8905-08B2EE147207","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"F705776E-F7BD-4E5B-BEB2-1580522A186D","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"5B7F0971-11F9-4FF6-AE4F-1CEE716301C7","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_product","defName":"商品","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"product_id","defName":"商品ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"1BB6DE57-6ECD-409A-9925-865CA65FF2E6","uiHint":null},{"defKey":"product_type_id","defName":"商品类型ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"420CECC9-B689-4A22-8699-B49DDE469169","uiHint":null},{"defKey":"name","defName":"商品名称","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"5CFBBD61-7F23-4AB8-9F68-72205059849F","uiHint":null},{"defKey":"price","defName":"价格","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","extProps":{},"domain":"C3B1681B-99F9-4818-9E80-DE1652A51D85","id":"C7F19A93-7383-4C42-A94A-38CE902687F9"},{"defKey":"inventory","defName":"库存","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","extProps":{},"domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","id":"FF7D241D-D08E-4234-BC3E-ABC290F1826F","uiHint":null},{"defKey":"description","defName":"商品描述","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"3E948CEC-3070-472C-AF92-F3CA11EC9D15","id":"C1653E3A-21E6-4BFF-AE5E-A2F383075525","uiHint":null},{"defKey":"del_flag","defName":"删除标识","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"FALSE","hideInGraph":false,"refDict":null,"baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"3E1B1B2B-0C7C-4371-95C4-AC0299C3341A","isStandard":true,"refStandard":"4751B67B-6B86-4C32-AA79-63EBD3F4F4C7","uiHint":null},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"9FF79BA2-2CC9-4D6F-B193-B497C41E5607"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":null,"uiHint":null,"id":"5AD3969F-02DD-48BF-8B4A-96993FD42625","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"A5751C46-BE1C-4C83-9DF9-A3AA9D29BB12","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"A8757FAC-5136-4471-8E29-735960FC0114","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":null,"uiHint":null,"id":"8815A747-CDB3-438C-A448-891DE42D9417","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"70E883E9-424B-4B24-9C16-764FB7B6180C","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"B870DB03-3565-4170-B0E9-AC042FA9F614","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"47D5A383-797C-4F97-AD7B-03ABC0295E11","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_product_type","defName":"商品类型","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true,"code":"relationNoShow","value":"关系图","newCode":"hideInGraph","com":"Icon","relationNoShow":true},{"refKey":"defKey","freeze":true,"hideInGraph":false,"code":"name","value":"字段代码","newCode":"defKey","com":"Input","relationNoShow":false},{"refKey":"defName","freeze":false,"hideInGraph":false,"code":"chnname","value":"显示名称","newCode":"defName","com":"Input","relationNoShow":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false,"code":"pk","value":"主键","newCode":"primaryKey","com":"Checkbox","relationNoShow":false},{"refKey":"notNull","freeze":false,"hideInGraph":true,"code":"notNull","value":"不为空","newCode":"notNull","com":"Checkbox","relationNoShow":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true,"code":"autoIncrement","value":"自增","newCode":"autoIncrement","com":"Checkbox","relationNoShow":true},{"refKey":"domain","freeze":false,"hideInGraph":true,"code":"type","value":"数据域","newCode":"domain","com":"Select","relationNoShow":true},{"refKey":"type","freeze":false,"hideInGraph":false,"code":"dataType","value":"数据类型","newCode":"type","com":"Text","relationNoShow":false},{"refKey":"len","freeze":false,"hideInGraph":false,"code":"len","value":"长度","newCode":"len","com":"Input","relationNoShow":false},{"refKey":"scale","freeze":false,"hideInGraph":false,"code":"scale","value":"小数位数","newCode":"scale","com":"Input","relationNoShow":false},{"refKey":"comment","freeze":false,"hideInGraph":true,"code":"remark","value":"说明","newCode":"comment","com":"Input","relationNoShow":true},{"refKey":"refDict","freeze":false,"hideInGraph":true,"code":"refDict","value":"数据字典","newCode":"refDict","com":"SearchSelect","relationNoShow":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true,"code":"defaultValue","value":"默认值","newCode":"defaultValue","com":"Input","relationNoShow":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false,"code":"isStandard","value":"标准字段","newCode":"isStandard","com":"label","relationNoShow":false,"enable":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true,"code":"uiHint","value":"UI建议","newCode":"uiHint","com":"Select","relationNoShow":true,"enable":true},{"refKey":"extProps","freeze":false,"hideInGraph":true,"code":"extProps","value":"拓展属性","newCode":"extProps","com":"linkButton","relationNoShow":true,"enable":true},{"refKey":"attr1","freeze":false,"hideInGraph":true,"value":"属性1","enable":true},{"refKey":"attr2","freeze":false,"hideInGraph":true,"value":"属性2","enable":false},{"refKey":"attr3","freeze":false,"hideInGraph":true,"value":"属性3","enable":false},{"refKey":"attr4","freeze":false,"hideInGraph":true,"value":"属性4","enable":false},{"refKey":"attr5","freeze":false,"hideInGraph":true,"value":"属性5","enable":false},{"refKey":"attr6","freeze":false,"hideInGraph":true,"value":"属性6","enable":false},{"refKey":"attr7","freeze":false,"hideInGraph":true,"value":"属性7","enable":false},{"refKey":"attr8","freeze":false,"hideInGraph":true,"value":"属性8","enable":false},{"refKey":"attr9","freeze":false,"hideInGraph":true,"value":"属性9","enable":false}],"fields":[{"defKey":"product_type_id","defName":"商品类型ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"E03F4EAD-77B1-491C-B9A9-10DB00ED0E30","uiHint":null},{"defKey":"name","defName":"类型名称","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"D4C1A954-A671-44B4-84AE-A3D32BB35EFF","uiHint":null},{"defKey":"description","defName":"类型描述","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"3E948CEC-3070-472C-AF92-F3CA11EC9D15","id":"6FE15C7C-7D74-4492-9732-20E4B46A8EAA","uiHint":null},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"D1F2FB3C-6098-4169-92A4-71DAD4445A71"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":null,"uiHint":null,"id":"96A382AE-5B98-4B79-8FBC-4C8EC50D51D2","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"673C034B-ABF5-41CF-8AD9-47F02C56035E","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"6C7C01BF-66BC-4E66-9997-3B41E3750951","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":null,"uiHint":null,"id":"EEC19567-430E-47FE-B621-C779FD24720D","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"6B699506-C92E-421F-8F2C-FD73E513559A","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"5DDBB4FC-ABC6-43E6-A472-ED22530B859E","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"091645D4-C437-45B5-9781-CAFAD32C20A8","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"hotel_product_record","defName":"购物记录","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true,"code":"relationNoShow","value":"关系图","newCode":"hideInGraph","com":"Icon","relationNoShow":true},{"refKey":"defKey","freeze":true,"hideInGraph":false,"code":"name","value":"字段代码","newCode":"defKey","com":"Input","relationNoShow":false},{"refKey":"defName","freeze":false,"hideInGraph":false,"code":"chnname","value":"显示名称","newCode":"defName","com":"Input","relationNoShow":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false,"code":"pk","value":"主键","newCode":"primaryKey","com":"Checkbox","relationNoShow":false},{"refKey":"notNull","freeze":false,"hideInGraph":true,"code":"notNull","value":"不为空","newCode":"notNull","com":"Checkbox","relationNoShow":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true,"code":"autoIncrement","value":"自增","newCode":"autoIncrement","com":"Checkbox","relationNoShow":true},{"refKey":"domain","freeze":false,"hideInGraph":true,"code":"type","value":"数据域","newCode":"domain","com":"Select","relationNoShow":true},{"refKey":"type","freeze":false,"hideInGraph":false,"code":"dataType","value":"数据类型","newCode":"type","com":"Text","relationNoShow":false},{"refKey":"len","freeze":false,"hideInGraph":false,"code":"len","value":"长度","newCode":"len","com":"Input","relationNoShow":false},{"refKey":"scale","freeze":false,"hideInGraph":false,"code":"scale","value":"小数位数","newCode":"scale","com":"Input","relationNoShow":false},{"refKey":"comment","freeze":false,"hideInGraph":true,"code":"remark","value":"说明","newCode":"comment","com":"Input","relationNoShow":true},{"refKey":"refDict","freeze":false,"hideInGraph":true,"code":"refDict","value":"数据字典","newCode":"refDict","com":"SearchSelect","relationNoShow":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true,"code":"defaultValue","value":"默认值","newCode":"defaultValue","com":"Input","relationNoShow":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false,"code":"isStandard","value":"标准字段","newCode":"isStandard","com":"label","relationNoShow":false,"enable":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true,"code":"uiHint","value":"UI建议","newCode":"uiHint","com":"Select","relationNoShow":true,"enable":true},{"refKey":"extProps","freeze":false,"hideInGraph":true,"code":"extProps","value":"拓展属性","newCode":"extProps","com":"linkButton","relationNoShow":true,"enable":true},{"refKey":"attr1","freeze":false,"hideInGraph":true,"value":"属性1","enable":true},{"refKey":"attr2","freeze":false,"hideInGraph":true,"value":"属性2","enable":false},{"refKey":"attr3","freeze":false,"hideInGraph":true,"value":"属性3","enable":false},{"refKey":"attr4","freeze":false,"hideInGraph":true,"value":"属性4","enable":false},{"refKey":"attr5","freeze":false,"hideInGraph":true,"value":"属性5","enable":false},{"refKey":"attr6","freeze":false,"hideInGraph":true,"value":"属性6","enable":false},{"refKey":"attr7","freeze":false,"hideInGraph":true,"value":"属性7","enable":false},{"refKey":"attr8","freeze":false,"hideInGraph":true,"value":"属性8","enable":false},{"refKey":"attr9","freeze":false,"hideInGraph":true,"value":"属性9","enable":false}],"fields":[{"defKey":"product_record_id","defName":"购物记录ID","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"C7ECBCA6-AB6B-468E-99E5-233FA34CAA00","uiHint":null},{"defKey":"order_id","defName":"订单ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"8C437596-F1D8-428B-BDB2-ADEB035030BB","uiHint":null},{"defKey":"product_id","defName":"商品ID","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"C27C049E-AE22-4885-8CAC-DB67BF6CEDD3","uiHint":null},{"defKey":"quantity","defName":"商品数量","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":null,"baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","extProps":{},"domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","id":"346F1AA7-0A91-43B5-A549-E86A50747942","uiHint":null},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":null,"uiHint":null,"id":"92006C8B-19D2-42AC-A091-EEA6879FB448","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"19F1F761-6A76-483C-A30A-F2D81478F392","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"81A98BA5-F256-4A84-A31F-20A9A8C4E8E9","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":null,"uiHint":null,"id":"0B2F5DF3-5351-4115-ACFE-68487182FBDD","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"06FD55BA-E65E-47B2-A8BF-73969E6B04F7","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":null,"uiHint":null,"id":"14DB6625-FF9E-4258-841C-9ED95126FB9D","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"673E9F4D-4972-4447-92AC-01A92570EB70","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"gen_table_column","defName":"代码生成业务表字段","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","freeze":true,"hideInGraph":true,"code":"relationNoShow","value":"关系图","newCode":"hideInGraph","com":"Icon","relationNoShow":true},{"refKey":"defKey","freeze":true,"hideInGraph":false,"code":"name","value":"字段代码","newCode":"defKey","com":"Input","relationNoShow":false},{"refKey":"defName","freeze":false,"hideInGraph":false,"code":"chnname","value":"显示名称","newCode":"defName","com":"Input","relationNoShow":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false,"code":"pk","value":"主键","newCode":"primaryKey","com":"Checkbox","relationNoShow":false},{"refKey":"notNull","freeze":false,"hideInGraph":true,"code":"notNull","value":"不为空","newCode":"notNull","com":"Checkbox","relationNoShow":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true,"code":"autoIncrement","value":"自增","newCode":"autoIncrement","com":"Checkbox","relationNoShow":true},{"refKey":"domain","freeze":false,"hideInGraph":true,"code":"type","value":"数据域","newCode":"domain","com":"Select","relationNoShow":true},{"refKey":"type","freeze":false,"hideInGraph":false,"code":"dataType","value":"数据类型","newCode":"type","com":"Text","relationNoShow":false},{"refKey":"len","freeze":false,"hideInGraph":false,"code":"len","value":"长度","newCode":"len","com":"Input","relationNoShow":false},{"refKey":"scale","freeze":false,"hideInGraph":false,"code":"scale","value":"小数位数","newCode":"scale","com":"Input","relationNoShow":false},{"refKey":"comment","freeze":false,"hideInGraph":true,"code":"remark","value":"说明","newCode":"comment","com":"Input","relationNoShow":true},{"refKey":"refDict","freeze":false,"hideInGraph":true,"code":"refDict","value":"数据字典","newCode":"refDict","com":"SearchSelect","relationNoShow":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true,"code":"defaultValue","value":"默认值","newCode":"defaultValue","com":"Input","relationNoShow":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false,"code":"isStandard","value":"标准字段","newCode":"isStandard","com":"label","relationNoShow":false,"enable":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true,"code":"uiHint","value":"UI建议","newCode":"uiHint","com":"Select","relationNoShow":true,"enable":true},{"refKey":"extProps","freeze":false,"hideInGraph":true,"code":"extProps","value":"拓展属性","newCode":"extProps","com":"linkButton","relationNoShow":true,"enable":true},{"refKey":"attr1","freeze":false,"hideInGraph":true,"value":"属性1","enable":true},{"refKey":"attr2","freeze":false,"hideInGraph":true,"value":"属性2","enable":false},{"refKey":"attr3","freeze":false,"hideInGraph":true,"value":"属性3","enable":false},{"refKey":"attr4","freeze":false,"hideInGraph":true,"value":"属性4","enable":false},{"refKey":"attr5","freeze":false,"hideInGraph":true,"value":"属性5","enable":false},{"refKey":"attr6","freeze":false,"hideInGraph":true,"value":"属性6","enable":false},{"refKey":"attr7","freeze":false,"hideInGraph":true,"value":"属性7","enable":false},{"refKey":"attr8","freeze":false,"hideInGraph":true,"value":"属性8","enable":false},{"refKey":"attr9","freeze":false,"hideInGraph":true,"value":"属性9","enable":false}],"fields":[{"defKey":"column_id","defName":"编号","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"AD311983-DE0C-41ED-8D46-23ACC767CACE"},{"defKey":"table_id","defName":"归属表编号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"1F06FF20-5057-4F92-87AF-22C0D7D78000"},{"defKey":"column_name","defName":"列名称","comment":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"8D8759C5-C039-4DF2-B9C9-71997F0AD5E3"},{"defKey":"column_comment","defName":"列描述","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"3E685E02-DF13-414E-AE16-AD43E3691C0F"},{"defKey":"column_type","defName":"列类型","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"B7042D3F-B48B-4800-8477-781041A02F1E"},{"defKey":"java_type","defName":"JAVA类型","comment":"","type":"VARCHAR","len":500,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"438DD772-26DC-47C0-8836-E7ED6C395BCA"},{"defKey":"java_field","defName":"JAVA字段名","comment":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"A24AA03A-6D5C-4525-8BF0-A33C7C10CB18"},{"defKey":"is_pk","defName":"是否主键","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"6B7BCBE0-8949-4287-922B-FC02CBF1D146"},{"defKey":"is_increment","defName":"是否自增","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"FEF5805E-2133-47EC-8F32-70D019C95884"},{"defKey":"is_required","defName":"是否必填","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"0B6DA497-C4C9-4B71-9160-188CA336FB6A"},{"defKey":"is_insert","defName":"是否为插入字段","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"A09AB9AE-0AD0-4DD6-8D72-0A9EFD4EC022"},{"defKey":"is_edit","defName":"是否编辑字段","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"B724C39E-A0A0-4B34-B3DC-63468694723A"},{"defKey":"is_list","defName":"是否列表字段","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"853411E5-307F-4F9D-B3A2-0E39827CDA98"},{"defKey":"is_query","defName":"是否查询字段","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"07527F1F-FC24-41D6-B318-02ED54EF7303"},{"defKey":"query_type","defName":"查询方式","comment":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"'EQ'","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"9CD62C3F-F7D7-4EF9-9D69-F877F868482C"},{"defKey":"html_type","defName":"显示类型","comment":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"BDFC2F5D-DEC2-45C5-8A97-97A2688B5322"},{"defKey":"dict_type","defName":"字典类型","comment":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"''","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"5EA1FF0D-2BD3-446E-B5D7-206C497DAF26"},{"defKey":"sort","defName":"排序","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","extProps":{},"domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","id":"0BA1EA47-F989-4434-81A1-803D7DC7A15E"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"8F5C6273-09B0-471C-9446-14B99C51ACA4","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"4581EEE7-3CAA-4772-8C2C-BDF48C2EE731","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"9B16406B-0165-4889-83BE-4D6AC89AC020","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"8F37BAF5-410C-4793-A32F-C64BC831E0A6","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"8002EDCC-7F90-451A-B50A-3AEDF6424034","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"09D05F33-FA45-4AF2-A071-CB1AC84C7396","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"},{"id":"46DEC147-06A1-42AE-93BF-7C6E757652A5","env":{"base":{"nameSpace":"","codeRoot":""}},"defKey":"gen_table","defName":"代码生成业务表","comment":"","properties":{"partitioned by":"(date string)","row format delimited":"","fields terminated by ','":"","collection items terminated by '-'":"","map keys terminated by ':'":"","store as textfile;":""},"sysProps":{"nameTemplate":"{defKey}[{defName}]"},"notes":{},"headers":[{"refKey":"hideInGraph","hideInGraph":true},{"refKey":"defKey","freeze":true,"hideInGraph":false},{"refKey":"defName","freeze":false,"hideInGraph":false},{"refKey":"primaryKey","freeze":false,"hideInGraph":false},{"refKey":"notNull","freeze":false,"hideInGraph":true},{"refKey":"autoIncrement","freeze":false,"hideInGraph":true},{"refKey":"domain","freeze":false,"hideInGraph":true},{"refKey":"type","freeze":false,"hideInGraph":false},{"refKey":"len","freeze":false,"hideInGraph":false},{"refKey":"scale","freeze":false,"hideInGraph":false},{"refKey":"comment","freeze":false,"hideInGraph":true},{"refKey":"refDict","freeze":false,"hideInGraph":true},{"refKey":"defaultValue","freeze":false,"hideInGraph":true},{"refKey":"isStandard","freeze":false,"hideInGraph":false},{"refKey":"uiHint","freeze":false,"hideInGraph":true},{"refKey":"extProps","freeze":false,"hideInGraph":true},{"refKey":"attr1","freeze":false,"hideInGraph":true},{"refKey":"attr2","freeze":false,"hideInGraph":true},{"refKey":"attr3","freeze":false,"hideInGraph":true},{"refKey":"attr4","freeze":false,"hideInGraph":true},{"refKey":"attr5","freeze":false,"hideInGraph":true},{"refKey":"attr6","freeze":false,"hideInGraph":true},{"refKey":"attr7","freeze":false,"hideInGraph":true},{"refKey":"attr8","freeze":false,"hideInGraph":true},{"refKey":"attr9","freeze":false,"hideInGraph":true}],"fields":[{"defKey":"table_id","defName":"编号","comment":"","type":"","len":"","scale":"","primaryKey":true,"notNull":true,"autoIncrement":true,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D","extProps":{},"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","id":"79075647-1988-4677-9F20-A2A602C81575"},{"defKey":"table_name","defName":"表名称","comment":"","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"E1A24ECE-5EFB-49C2-9D02-C05A49F2CCB0"},{"defKey":"table_comment","defName":"表描述","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"BB39D58D-38CF-41B5-AC8D-E8AB8A6478A3"},{"defKey":"sub_table_name","defName":"关联子表的表名","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"08562598-FBF2-4915-ACAE-D42A2CF17B07"},{"defKey":"sub_table_fk_name","defName":"子表关联的外键名","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"6D179F42-668D-448F-8AC0-AC3DB85B258D"},{"defKey":"class_name","defName":"实体类名称","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"E75B2070-D2E9-492D-BC73-AAFFC9FD1D80"},{"defKey":"tpl_category","defName":"使用的模板","comment":"crud单表操作 tree树表操作","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"'crud'","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"8D0A98F1-5083-4B77-88D2-1C53B633C0AF"},{"defKey":"package_name","defName":"生成包路径","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"54611CCC-CA4B-42E1-9F32-4944C85B85A6","id":"0C9276C0-7831-42A1-8AD1-2626D2AF41A3"},{"defKey":"module_name","defName":"生成模块名","comment":"","type":"VARCHAR","len":30,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"758FCF61-9105-41BA-A846-5AD01F16B1A6"},{"defKey":"business_name","defName":"生成业务名","comment":"","type":"VARCHAR","len":30,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"E2DE7A2A-096C-484E-B2DA-938490FA6B2E"},{"defKey":"function_name","defName":"生成功能名","comment":"","type":"VARCHAR","len":50,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"1DB78D4C-4D10-483E-A181-2C2CD621179E"},{"defKey":"function_author","defName":"生成功能作者","comment":"","type":"VARCHAR","len":50,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"92F356C1-1903-48B8-B67B-BDD62C2093F7"},{"defKey":"gen_type","defName":"生成代码方式","comment":"0zip压缩包 1自定义路径","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"0","hideInGraph":false,"refDict":"","baseType":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","extProps":{},"domain":"73FD2BAD-2358-4336-B96D-45DC897BD792","id":"4449D860-CDF7-47F5-9EB2-B81A52B1274F"},{"defKey":"gen_path","defName":"生成路径","comment":"不填默认项目路径","type":"VARCHAR","len":200,"scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"'/'","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"","id":"0B604A9B-CE8E-4E8E-9266-5EFDB1818E4A"},{"defKey":"options","defName":"其他生成选项","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"3E948CEC-3070-472C-AF92-F3CA11EC9D15","id":"3022F734-31A5-4E30-92ED-3E4BD1A91C2D"},{"defKey":"tenant_id","defName":"租户号","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","refDict":"","uiHint":"","id":"049329F8-6B20-48C9-ADA6-9264A7073548","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"revision","defName":"乐观锁","comment":"","domain":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"65B69C5F-2F5D-446C-AF04-8ADA336E0E4D","baseType":"1D764C4A-6F9F-421E-B11A-6F3E23B51811"},{"defKey":"create_by","defName":"创建人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"6DD1F950-A4C5-4379-BB8E-5D2B757B99DD","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"create_time","defName":"创建时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"CURRENT_TIMESTAMP","hideInGraph":true,"refDict":"","uiHint":"","id":"1CBD9137-EB9E-42DB-81F3-B9F3389A6DDB","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3"},{"defKey":"update_by","defName":"更新人","comment":"","domain":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"DE2D8389-DDA6-4159-A70B-263609A23F1C","baseType":"ADADDD44-903F-4709-855A-FFCC0E10B02D"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"EE4C57A1-0F21-4620-887A-1F72FECE679D"},{"defKey":"update_time","defName":"更新时间","comment":"","domain":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"","hideInGraph":true,"refDict":"","uiHint":"","id":"26D424D7-E89F-4821-A761-E382D4987CF1","baseType":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","extProps":{"on_update":"CURRENT_TIMESTAMP"}}],"correlations":[],"indexes":[],"type":"P"}],"views":[],"dicts":[{"defKey":"CheckinType","defName":"入住类型","sort":"","intro":"","id":"A1DC5A2C-C329-481A-86BD-8898245316DB","items":[{"defKey":"1","defName":"全日房","sort":"1","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"F5CF49AB-694D-4B7D-8966-E879A9071FA5"},{"defKey":"2","defName":"钟点房","sort":"2","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"A02DDA79-BA6E-4E22-8248-5DC09C06F1FB"},{"defKey":"3","defName":"免费房","sort":"3","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"0ADFFEAE-76B8-451A-B48C-11ADFFA296EB"},{"defKey":"4","defName":"自用房","sort":"4","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"6D586E10-8B23-49FB-8B8E-22411AD28E75"}]},{"defKey":"CheckinStatus","defName":"入住状态","sort":"","intro":"","id":"4BD32F5C-E966-4AB1-8B29-AEDF8B0C2BD7","items":[{"defKey":"1","defName":"已预订","sort":"1","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"EB5E6E1C-4193-4CB6-9104-21926CCB225A"},{"defKey":"2","defName":"已入住","sort":"2","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"1766C79B-8AB0-4DF2-ACA0-8C9DD078EA37"},{"defKey":"3","defName":"已取消","sort":"3","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"90AFF63D-CD02-4CAD-9DD5-F406E920238A"},{"defKey":"4","defName":"已退房","sort":"4","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"3EA4802C-379F-4B80-82E3-0F8C539E6E99"},{"defKey":"5","defName":"待付款","sort":"5","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"3F30A2D6-AF8A-43B9-8488-681F9C7380BD"},{"defKey":"6","defName":"待确认","sort":"6","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"F065E023-2D75-4034-831F-881CEF54A07D"},{"defKey":"7","defName":"已拒绝","sort":"7","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"05B05EB5-A822-48E7-8917-89FF0F36B9B0"},{"defKey":"8","defName":"已关闭","sort":"8","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"8480D890-DE38-4DF6-8515-73652495B4FA"}]},{"defKey":"Gender","defName":"性别","sort":"","intro":"","id":"136C6624-4497-41A1-9D75-84D54B1DD6BA","items":[{"defKey":"1","defName":"男","sort":"1","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"14CB5534-EBC0-41CC-869F-3066E0B9F6A6"},{"defKey":"2","defName":"女","sort":"2","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"15861072-ACE2-4712-877C-2CBE22C6492F"},{"defKey":"3","defName":"未知","sort":"3","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"28C87AC8-80A6-40A9-B376-984BFE541B7F"}]},{"defKey":"RoomStatus","defName":"房间状态","sort":"","intro":"","id":"4113429B-DAD0-4600-AFEF-FFBDBC2106B4","items":[{"defKey":"1","defName":"空房","sort":"1","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"27A53751-7BF8-4F3A-B164-BF7FAF9D5B33"},{"defKey":"2","defName":"在住","sort":"2","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"A6DD2E6D-8037-48B3-B547-CF03E9CB4CEC"},{"defKey":"3","defName":"维修","sort":"3","parentKey":"","intro":"关房","enabled":true,"attr1":"","attr2":"","attr3":"","id":"9734AE05-6C3F-453F-96BE-86ADEA9D25F1"},{"defKey":"4","defName":"保留","sort":"4","parentKey":"","intro":"关房","enabled":true,"attr1":"","attr2":"","attr3":"","id":"413E6C8A-0B1F-4D73-A990-DBCF0CC2B471"},{"defKey":"5","defName":"停用","sort":"5","parentKey":"","intro":"关房","enabled":true,"attr1":"","attr2":"","attr3":"","id":"A25559E4-DD06-4C64-BAF0-4911864DA058"}]},{"defKey":"DataScope","defName":"数据范围","sort":"","intro":"","id":"DFB73BC6-6889-4FFB-9732-748DE7860437","items":[{"defKey":"1","defName":"全部数据权限","sort":"1","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"A9E85025-0F01-46BF-A7F3-437B210F4624"},{"defKey":"2","defName":"自定数据权限","sort":"2","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"F8FBA49A-36EB-4EEA-B38A-6AA38B91428E"}]},{"defKey":"PayMethod","defName":"支付方式","sort":"","intro":"","id":"AA955573-8174-4193-A50C-3646C78A4C8E","items":[{"defKey":"1","defName":"现金","sort":"1","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"1A4D92F6-4331-4BD5-A677-2F03032BE0C4"},{"defKey":"2","defName":"微信","sort":"2","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"90D1BCAA-B833-4A4B-ABD3-FA559DBACE23"},{"defKey":"3","defName":"支付宝","sort":"3","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"226D6B2A-AEBA-4064-B9DA-B97B37E24F29"},{"defKey":"4","defName":"其他","sort":"4","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"85C15256-03D3-4D93-8753-9BB733E56C65"}]},{"defKey":"PayType","defName":"支付类型","sort":"","intro":"","id":"C05A5E85-B9C8-4D75-89DA-37FDD3B88B57","items":[{"defKey":"1","defName":"收款","sort":"1","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"7ACFC3CB-95B6-4C8B-A412-7C3CB951A563"},{"defKey":"2","defName":"付款","sort":"2","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"88A737B7-C5C2-4831-A3C2-DBA23FD8BCD9"},{"defKey":"3","defName":"收押金","sort":"3","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"6994349A-2542-40BC-BB8E-C0E354843EB8"}]},{"defKey":"OrderStatus","defName":"订单状态","sort":"","intro":"","id":"EF1E8D93-A4F5-4505-87B7-21C8FD52856F","items":[{"defKey":"","defName":"","sort":"","parentKey":"","intro":"","enabled":true,"attr1":"","attr2":"","attr3":"","id":"366CD498-820D-4C15-A611-F16043F273BA"}]}],"viewGroups":[{"defKey":"sys","defName":"系统管理","refEntities":["25B7503E-EF12-4927-A71E-C4A1AEDEB235","6F20F2F2-E973-4380-9535-16E2A0EC1181","705CDC71-CF34-4CD5-A772-80C7E579A933","637CF45A-4E57-47FC-A80B-65E541002249","03D2673F-34FD-4110-8061-D34288C54651","F79CAAB8-5560-4F18-ADC5-CB54152E2662"],"refViews":[],"refDiagrams":[],"refDicts":["DFB73BC6-6889-4FFB-9732-748DE7860437","136C6624-4497-41A1-9D75-84D54B1DD6BA"],"id":"9BEEC173-5EB4-43F2-ACF7-A2036B607EDF","undefined":[],"refLogicEntities":[]},{"defKey":"hotel","defName":"住房管理","refEntities":["CB393D96-4818-4542-BEB8-D3A13AE78BA6","D4A874CD-3891-4D26-AA75-B9C8E2B32D63","6BCD0187-655F-4F4E-B1B3-2665904AC08A","BA6FE961-2B19-4069-A6B7-30002823F624","24A00A4B-D807-486C-AF5D-D1BB63732A6B","E42F17A0-3413-4487-AEDF-76DEB462DC78","522E762A-CB6C-4DAE-95E4-96C47762C395","6B0D244B-924A-4A2F-86CF-D5616EE1FEB7","DAE2944E-1B78-4BEF-B010-E35E0642D517","EDA8F853-0FFC-47A0-A855-70529002C5B7","5B7F0971-11F9-4FF6-AE4F-1CEE716301C7","47D5A383-797C-4F97-AD7B-03ABC0295E11","091645D4-C437-45B5-9781-CAFAD32C20A8"],"refViews":[],"refDiagrams":[],"refDicts":["A1DC5A2C-C329-481A-86BD-8898245316DB","4BD32F5C-E966-4AB1-8B29-AEDF8B0C2BD7","4113429B-DAD0-4600-AFEF-FFBDBC2106B4","AA955573-8174-4193-A50C-3646C78A4C8E","C05A5E85-B9C8-4D75-89DA-37FDD3B88B57","EF1E8D93-A4F5-4505-87B7-21C8FD52856F"],"id":"B6E962FC-9EF9-4B4A-B536-B7B17237F972","undefined":[],"refLogicEntities":[]},{"defKey":"frs","defName":"人脸管理","refEntities":["FD10DD8F-6F48-4C49-B04C-C8E2FA5969C4"],"refViews":[],"refDiagrams":[],"refDicts":[],"id":"E0042EB9-0C01-4D38-871A-40B46CC03883","undefined":[],"refLogicEntities":[]},{"defKey":"gen-代码生成","defName":"","refEntities":["46DEC147-06A1-42AE-93BF-7C6E757652A5","673E9F4D-4972-4447-92AC-01A92570EB70"],"refViews":[],"refDiagrams":[],"refDicts":[],"id":"BC6F9C57-697F-44DA-919C-259DFC28F688"}],"dataTypeMapping":{"referURL":"","mappings":[{"defKey":"string","id":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","defName":"字串","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"VARCHAR","A4E23CB7-BB01-4BD1-9F71-F73F3E15A542":"VARCHAR2","BFC87171-C74F-494A-B7C2-76B9C55FACC9":"VARCHAR","DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022":"VARCHAR","89504F5D-94BF-4C9E-8B2E-44F37305FED5":"VARCHAR","0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307":"VARCHAR2","592C7013-143D-4E7B-AF64-0D7BF1E28230":"VARCHAR","77BD85E5-9D0D-4096-8427-CBA306FC9C6A":"VARCHAR","11D1FB71-A587-4217-89BA-611B8A1F83E0":"STRING","B363BE0B-F852-49B8-9B2E-F6D2174DEAC1":"TEXT","797A1496-D649-4261-89B4-544132EC3F36":"String","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"String","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"String","F3AC2415-E86B-40C6-9FEB-F4B7937D2C30":"string","81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2":"string","B91D99E0-9B7C-416C-8737-B760957DAF09":"string","BDF457FD-9F98-4AC3-A705-7587B00A3BAB":"String","56F4B55B-F0B8-4049-9E6B-50B95C1D793A":"VARCHAR","483F9346-C99E-4014-A1D2-A554606BD8A3":"VARCHAR","ABF5836C-0B7C-4007-A41C-F869325E5842":"VARCHAR"},{"defKey":"double","id":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","defName":"小数","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"DECIMAL","A4E23CB7-BB01-4BD1-9F71-F73F3E15A542":"DECIMAL","BFC87171-C74F-494A-B7C2-76B9C55FACC9":"DECIMAL","DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022":"NUMERIC","89504F5D-94BF-4C9E-8B2E-44F37305FED5":"DECIMAL","0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307":"DECIMAL","592C7013-143D-4E7B-AF64-0D7BF1E28230":"NUMERIC","77BD85E5-9D0D-4096-8427-CBA306FC9C6A":"NUMERIC","11D1FB71-A587-4217-89BA-611B8A1F83E0":"DOUBLE","B363BE0B-F852-49B8-9B2E-F6D2174DEAC1":"REAL","797A1496-D649-4261-89B4-544132EC3F36":"Double","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"Double","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"Double","F3AC2415-E86B-40C6-9FEB-F4B7937D2C30":"decimal","81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2":"double","B91D99E0-9B7C-416C-8737-B760957DAF09":"*float64","BDF457FD-9F98-4AC3-A705-7587B00A3BAB":"f64","56F4B55B-F0B8-4049-9E6B-50B95C1D793A":"DECIMAL","483F9346-C99E-4014-A1D2-A554606BD8A3":"DECIMAL","ABF5836C-0B7C-4007-A41C-F869325E5842":"NUMERIC"},{"defKey":"int","id":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","defName":"整数","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"INT","A4E23CB7-BB01-4BD1-9F71-F73F3E15A542":"INT","BFC87171-C74F-494A-B7C2-76B9C55FACC9":"INT","DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022":"INTEGER","89504F5D-94BF-4C9E-8B2E-44F37305FED5":"INT","0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307":"INTEGER","592C7013-143D-4E7B-AF64-0D7BF1E28230":"INTEGER","77BD85E5-9D0D-4096-8427-CBA306FC9C6A":"INT4","11D1FB71-A587-4217-89BA-611B8A1F83E0":"INT","B363BE0B-F852-49B8-9B2E-F6D2174DEAC1":"INTEGER","797A1496-D649-4261-89B4-544132EC3F36":"Integer","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"Integer","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"Integer","F3AC2415-E86B-40C6-9FEB-F4B7937D2C30":"float","81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2":"int","B91D99E0-9B7C-416C-8737-B760957DAF09":"*int","BDF457FD-9F98-4AC3-A705-7587B00A3BAB":"i32","56F4B55B-F0B8-4049-9E6B-50B95C1D793A":"INTEGER","483F9346-C99E-4014-A1D2-A554606BD8A3":"INT","ABF5836C-0B7C-4007-A41C-F869325E5842":"INTEGER"},{"defKey":"date","id":"89D69E81-EA34-42EE-9FA2-93B8BD27E098","defName":"日期","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"DATETIME","A4E23CB7-BB01-4BD1-9F71-F73F3E15A542":"DATE","BFC87171-C74F-494A-B7C2-76B9C55FACC9":"DATETIME","DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022":"TIMESTAMP","89504F5D-94BF-4C9E-8B2E-44F37305FED5":"DATE","0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307":"DATE","592C7013-143D-4E7B-AF64-0D7BF1E28230":"DATE","77BD85E5-9D0D-4096-8427-CBA306FC9C6A":"DATE","11D1FB71-A587-4217-89BA-611B8A1F83E0":"DATETIME","B363BE0B-F852-49B8-9B2E-F6D2174DEAC1":"NUMERIC","797A1496-D649-4261-89B4-544132EC3F36":"Date","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"Date","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"Date","F3AC2415-E86B-40C6-9FEB-F4B7937D2C30":"DateTime","81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2":"timestamp","B91D99E0-9B7C-416C-8737-B760957DAF09":"*time.Time","BDF457FD-9F98-4AC3-A705-7587B00A3BAB":"DateTime<Local>","56F4B55B-F0B8-4049-9E6B-50B95C1D793A":"DATE","483F9346-C99E-4014-A1D2-A554606BD8A3":"DATETIME","ABF5836C-0B7C-4007-A41C-F869325E5842":"DATE"},{"defKey":"timestamp","defName":"日期（时区同步）","id":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"TIMESTAMP","797A1496-D649-4261-89B4-544132EC3F36":"Date","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"Date","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"Date"},{"defKey":"bytes","id":"D516E75B-90F5-4741-B9B3-A186A263F04C","defName":"二进制","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"BLOB","A4E23CB7-BB01-4BD1-9F71-F73F3E15A542":"BLOB","BFC87171-C74F-494A-B7C2-76B9C55FACC9":"VARBINARY","DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022":"BYTEA","89504F5D-94BF-4C9E-8B2E-44F37305FED5":"BLOB","0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307":"BLOB","592C7013-143D-4E7B-AF64-0D7BF1E28230":"BYTEA","77BD85E5-9D0D-4096-8427-CBA306FC9C6A":"BYTEA","11D1FB71-A587-4217-89BA-611B8A1F83E0":"BINARY","B363BE0B-F852-49B8-9B2E-F6D2174DEAC1":"NONE","797A1496-D649-4261-89B4-544132EC3F36":"byte[]","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"byte[]","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"byte[]","F3AC2415-E86B-40C6-9FEB-F4B7937D2C30":"binary","81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2":"binary","B91D99E0-9B7C-416C-8737-B760957DAF09":"[]byte","56F4B55B-F0B8-4049-9E6B-50B95C1D793A":"BYTE","ABF5836C-0B7C-4007-A41C-F869325E5842":"BYTEA"},{"defKey":"largeText","id":"B17BDED3-085F-40E1-9019-3B79CF2BF075","defName":"大文本","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"TEXT","A4E23CB7-BB01-4BD1-9F71-F73F3E15A542":"CLOB","BFC87171-C74F-494A-B7C2-76B9C55FACC9":"TEXT","DFBEC1DD-AA84-456E-BBF3-C95DD0DB2022":"TEXT","89504F5D-94BF-4C9E-8B2E-44F37305FED5":"CLOB","0BBCABA5-B8E4-41B0-B8E4-8F5EA6029307":"CLOB","592C7013-143D-4E7B-AF64-0D7BF1E28230":"TEXT","77BD85E5-9D0D-4096-8427-CBA306FC9C6A":"TEXT","11D1FB71-A587-4217-89BA-611B8A1F83E0":"STRING","B363BE0B-F852-49B8-9B2E-F6D2174DEAC1":"TEXT","797A1496-D649-4261-89B4-544132EC3F36":"String","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"String","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"String","F3AC2415-E86B-40C6-9FEB-F4B7937D2C30":"string","81CCA482-3F4D-4EAC-8CF9-F5E7BC098AD2":"string","B91D99E0-9B7C-416C-8737-B760957DAF09":"string","BDF457FD-9F98-4AC3-A705-7587B00A3BAB":"String","56F4B55B-F0B8-4049-9E6B-50B95C1D793A":"TEXT","483F9346-C99E-4014-A1D2-A554606BD8A3":"STRING","ABF5836C-0B7C-4007-A41C-F869325E5842":"TEXT"},{"defKey":"tinyint","defName":"微整数","id":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"TINYINT","797A1496-D649-4261-89B4-544132EC3F36":"Short","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"Short","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"Short"},{"defKey":"bigint","defName":"长整数","id":"ADADDD44-903F-4709-855A-FFCC0E10B02D","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"BIGINT","797A1496-D649-4261-89B4-544132EC3F36":"long","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"long","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"long"},{"defKey":"boolean","defName":"布尔值","id":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","29D1CE08-4C35-4D2D-AAA9-23D93305B52E":"BOOLEAN","797A1496-D649-4261-89B4-544132EC3F36":"Boolean","895CFD1D-4273-4D32-A2C4-CAC70200AB5B":"Boolean","A2EE7B4A-CE62-4290-B00C-B26C1BF18073":"Boolean"}]},"domains":[{"defKey":"DefaultString","defName":"默认字串","applyFor":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","len":255,"scale":"","uiHint":"","id":"9092C4E0-1A54-4859-ABBB-5B62DBC27573"},{"defKey":"IdOrKey","defName":"主键标识","applyFor":"ADADDD44-903F-4709-855A-FFCC0E10B02D","len":"","scale":"","uiHint":"","id":"32B72CA0-59F6-4D82-9CB1-26716B4AB9B1"},{"defKey":"Name","defName":"名称","applyFor":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","len":100,"scale":"","uiHint":"","id":"54611CCC-CA4B-42E1-9F32-4944C85B85A6"},{"defKey":"number","defName":"编号","applyFor":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","len":32,"scale":"","uiHint":"","id":"F087A465-62CE-4135-9CBE-89054F970B04"},{"defKey":"Int","defName":"整数","applyFor":"1D764C4A-6F9F-421E-B11A-6F3E23B51811","len":"","scale":"","uiHint":"","id":"6BC8F04B-6CFA-4995-98D3-318F5CDD774E"},{"defKey":"Double","defName":"小数","applyFor":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","len":24,"scale":6,"uiHint":"","id":"FF4459C5-6B45-4DBF-8FC0-E06239BC05B4"},{"defKey":"Money","defName":"金额","applyFor":"1A0BDC09-0792-4174-9E8E-80BE8DF44B8E","len":10,"scale":2,"uiHint":"","id":"C3B1681B-99F9-4818-9E80-DE1652A51D85"},{"defKey":"YesNo","defName":"是否","applyFor":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","len":"","scale":"","uiHint":"","id":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF"},{"defKey":"DateTime","defName":"日期时间","applyFor":"89D69E81-EA34-42EE-9FA2-93B8BD27E098","len":"","scale":"","uiHint":"","id":"7CFFA0D3-6A93-4DDC-BC10-DF21211064DC"},{"defKey":"TimeStamp","defName":"日期时间（时区同步）","applyFor":"91C500D4-FDD0-4779-83B2-145E4A85B4E3","len":"","scale":"","uiHint":"","id":"F7E32D50-943F-4D2A-A5D6-09B290C85E5B"},{"defKey":"DictData","defName":"数据字典","applyFor":"E35F698B-B1F7-4BFC-8BAF-3FCEBF80712A","len":"","scale":"","uiHint":"","id":"73FD2BAD-2358-4336-B96D-45DC897BD792"},{"defKey":"ip","defName":"IP地址","applyFor":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","len":128,"scale":"","uiHint":"","id":"FCA46CBB-B58B-4690-8B63-B19E95D0CA63"},{"defKey":"DescText","defName":"描述文本","applyFor":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","len":"900","scale":"","uiHint":"","id":"3E948CEC-3070-472C-AF92-F3CA11EC9D15"},{"defKey":"remark","defName":"备注","applyFor":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","len":500,"scale":"","uiHint":"","id":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E"}],"diagrams":[],"standardFields":[{"id":"5C16299B-AE1B-4011-BD8D-A70260255DC5","defKey":"default","defName":"默认","fields":[{"defKey":"status","defName":"启用状态","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"TRUE","hideInGraph":false,"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","refDict":"","extProps":{},"notes":{},"attr1":"","attr2":"","attr3":"","attr4":"","attr5":"","attr6":"","attr7":"","attr8":"","attr9":"","id":"CAB96AFB-54F4-4410-8452-370297A67009","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D"},{"defKey":"del_flag","defName":"删除标识","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"FALSE","hideInGraph":false,"refDict":"","baseType":"DF8A7142-B22C-426E-8CBD-63D9E5C9545D","extProps":{},"domain":"6F7C1C5C-D159-41E6-BF9D-54DEEFA79AFF","id":"4751B67B-6B86-4C32-AA79-63EBD3F4F4C7"},{"defKey":"remark","defName":"备注","comment":"","type":"","len":"","scale":"","primaryKey":false,"notNull":false,"autoIncrement":false,"defaultValue":"NULL","hideInGraph":false,"refDict":"","baseType":"FC9790A7-36B8-4A48-8F9A-BC1042BCFE64","extProps":{},"domain":"E3DB3F4D-BACE-45C7-81F5-F10C2AA7C50E","id":"12D164EF-FFAD-42E6-8CAE-488BEC3036AD"}]}],"dbConn":[{"defKey":"121450D0-5FCB-41C6-9A56-0FBA123DEA30","defName":"本地Iahms数据库","type":"29D1CE08-4C35-4D2D-AAA9-23D93305B52E","properties":{"driver_class_name":"com.mysql.cj.jdbc.Driver","url":"jdbc:mysql://localhost:3306/iahms?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC","password":"root","username":"root"}}],"logicEntities":[],"namingRules":[{"id":"63F1DC0E-6A76-4B75-B3DA-4B00657B4E1B","defName":"属性代码不能超过32","intro":"","controlIntensity":"S","applyObjectType":"L","applyFieldType":"field","programCode":"return (data.field.defName||\"\").length <= 32","enable":true},{"id":"668CBEE6-E0B7-4ACE-B72E-63942963B191","defName":"长度不能超过32位","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"entity","programCode":"return (data.entity.defName||\"\").length <= 32","enable":true},{"id":"11BD987F-82E7-418E-A752-FDD84F1582A2","defName":"长度不能超过32位","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return (data.field.defName||\"\").length <= 32","enable":true},{"id":"29D0A8D9-ABE2-451F-8A39-52FAB02E62B9","defName":"索引名-长度不超过32个字符","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"index","programCode":"return (data.index.defName||\"\").length <= 32","enable":true},{"id":"B425A96F-6A31-4DBD-8743-A00DE28FB50F","defName":"不能使用保留字","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"index","programCode":"let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.index.defKey.toLowerCase())<0;","enable":true},{"id":"EF9E44D0-691A-4352-A079-CFF300107531","defName":"索引名-全小写","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"index","programCode":"return !/[A-Z]+/.test(data.index.defKey);","enable":true},{"id":"972EB2FB-4428-429D-8B0A-F082A8C7A94D","defName":"名称不能为空","intro":"","controlIntensity":"F","applyObjectType":"L","applyFieldType":"entity","programCode":"return data.logicEntity.defName","enable":true},{"id":"EEAEB9C5-BB6C-4E92-949B-D27928690D85","defName":"名称长度不超过32","intro":"","controlIntensity":"S","applyObjectType":"L","applyFieldType":"entity","programCode":"return (data.logicEntity.defName||\"\").length <=32","enable":true},{"id":"24E3F7E5-730D-4378-B72D-195D6B940352","defName":"不能使用保留字","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"entity","programCode":"let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.entity.defKey.toLowerCase())<0;","enable":true},{"id":"039BF435-DC77-4DA4-81C7-7F8076BF22BB","defName":"表名-全小写","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"entity","programCode":"return !/[A-Z]+/.test(data.entity.defKey);","enable":true},{"id":"CBEB0E30-19C6-427D-A8BF-61FF10E27A0B","defName":"表名-不允许空格","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"entity","programCode":"return !/\\s+/.test(data.entity.defKey);","enable":true},{"id":"1168C7C2-8E8E-4FB7-B639-B3DE839C395A","defName":"表名-英文及下划线","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"entity","programCode":"return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.entity.defKey);","enable":true},{"id":"D373637C-D3A6-4621-B656-6841A5444A76","defName":"表必须有comment注释","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"entity","programCode":"return (data.entity.defName||\"\").length > 0 || (data.entity.comment||\"\").length > 0","enable":true},{"id":"2BAB122B-8811-40BB-89F3-CDC24B5862D3","defName":"主键命名为 id，类型为 int 或 bigint，且为自增","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"entity","programCode":"let fields = data.entity.fields;\nfor(let i=0;i<fields.length;i++){\n    let field = fields[i];\n    if(field.primaryKey){\n        return field.autoIncrement && (field.dbType.toUpperCase()==\"INT\"||field.dbType==\"BIGINT\");\n    }\n}\nreturn false;","enable":true},{"id":"0B2F0BD2-3B84-4AB1-BA29-9DE9620AF608","defName":"必须有数据的创建时间以及创建人字段","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"entity","programCode":"let count = 0;\nlet fields = data.entity.fields;\nfor(let i=0;i<fields.length;i++){\n    let field = fields[i];\n    if(\"created_time,updated_time\".indexOf(field.defKey.toLowerCase())>=0){\n        count ++;\n    }\n}\nreturn count==2;","enable":true},{"id":"BEC54F19-52D5-4882-BCE1-4439785F8001","defName":"不能使用保留字","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"let sysWords = \"action,add,aggregate,all,alter,after,and,as,asc,avg,avg_row_length,auto_increment,between,bigint,bit,binary,blob,bool,both,by,cascade,case,char,character,change,check,checksum,column,columns,comment,constraint,create,cross,current_date,current_time,current_timestamp,data,database,databases,date,datetime,day,day_hour,day_minute,day_second,dayofmonth,dayofweek,dayofyear,dec,decimal,default,delayed,delay_key_write,delete,desc,describe,distinct,distinctrow,double,drop,end,else,escape,escaped,enclosed,enum,explain,exists,fields,file,first,float,float4,float8,flush,foreign,from,for,full,function,global,grant,grants,group,having,heap,high_priority,hour,hour_minute,hour_second,hosts,identified,ignore,in,index,infile,inner,insert,insert_id,int,integer,interval,int1,int2,int3,int4,int8,into,if,is,isam,join,key,keys,kill,last_insert_id,leading,left,length,like,lines,limit,load,local,lock,logs,long,longblob,longtext,low_priority,max,max_rows,match,mediumblob,mediumtext,mediumint,middleint,min_rows,minute,minute_second,modify,month,monthname,myisam,natural,numeric,no,not,null,on,optimize,option,optionally,or,order,outer,outfile,pack_keys,partial,password,precision,primary,procedure,process,processlist,privileges,read,real,references,reload,regexp,rename,replace,restrict,returns,revoke,rlike,row,rows,second,select,set,show,shutdown,smallint,soname,sql_big_tables,sql_big_selects,sql_low_priority_updates,sql_log_off,sql_log_update,sql_select_limit,sql_small_result,sql_big_result,sql_warnings,straight_join,starting,status,string,table,tables,temporary,terminated,text,then,time,timestamp,tinyblob,tinytext,tinyint,trailing,to,type,use,using,unique,unlock,unsigned,update,usage,values,varchar,variables,varying,varbinary,with,write,when,where,year,year_month,zerofill\".split(\",\");\nreturn sysWords.indexOf(data.field.defKey.toLowerCase())<0;","enable":true},{"id":"082E186D-7B02-4F1C-9ECE-378AB98C4845","defName":"字段-全小写","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"return !/[A-Z]+/.test(data.field.defKey);","enable":true},{"id":"F3CE5C67-23B6-4E7B-BA91-D5F0BCBC9E6A","defName":"字段-不允许空格","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return !/\\s+/.test(data.field.defKey);","enable":true},{"id":"21AFEAC8-96D7-467F-8320-A33887FC0C5D","defName":"字段-英文及下划线","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.field.defKey);","enable":true},{"id":"2BBDE47B-6926-4E1A-AE57-D4F6E5399EE6","defName":"字段-必需有comment注释","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return (data.field.defName||\"\").length > 0 || (data.field.comment||\"\").length > 0","enable":true},{"id":"5E181E43-0D72-498F-8178-4C1CDBC89A16","defName":"字段-不能与表名相同","intro":"","controlIntensity":"F","applyObjectType":"P","applyFieldType":"field","programCode":"return data.field.defKey != data.entity.defKey;","enable":true},{"id":"DE8F8598-5D53-4727-A837-7816C2AF99D9","defName":"外键-字段必须具有表名及其主键","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"let relas = data.entity.correlations;\nfor(let i=0;i<relas.length;i++){\n    let rela = relas[i];\n    if(data.field.defKey==rela.myField&&rela.myRows==\"n\"){\n        if(rela.myField==(rela.refEntity+\"_\"+rela.refField)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n}\nreturn true;","enable":true},{"id":"D330BCC3-DBAB-4677-8C5A-A301003A5878","defName":"时间字段类型尽量选取 timestamp","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"if(data.field.defName.lastIndexOf(\"日期\")>=0 || data.field.defName.lastIndexOf(\"时间\")>=0 ){\n    if(data.field.dbType.toLowerCase().indexOf(\"timestamp\")>=0){\n        return true;\n    }else{\n        return false;\n    }\n};\nreturn true;","enable":true},{"id":"2E7FDA44-989A-4C5B-A0C5-12B1E40E57B1","defName":"索引名-英文及下划线","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"index","programCode":"return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(data.index.defKey);","enable":true},{"id":"023450B3-AAE2-4DC1-AE63-2196DD82823D","defName":"索引名-主键的名称以pk_开头，唯一键以uk_开头，普通索引以 ix_开头","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"index","programCode":"if(data.index.unique){\n    return data.index.defKey.indexOf(\"uk_\")==0;\n}else{\n    return data.index.defKey.indexOf(\"ix_\")==0;\n}","enable":true},{"id":"1C563E17-262B-4EB6-87F0-203CAC667CF0","defName":"不允许存在blob、text等大字段","intro":"","controlIntensity":"S","applyObjectType":"P","applyFieldType":"field","programCode":"if(\"blob,text\".indexOf(data.field.dbType.toLowerCase())>=0){\n    return false;\n}\nreturn true;","enable":true}]}